<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>MongoDB.Driver.Core</name>
  </assembly>
  <members>
    <member name="T:MongoDB.Driver.BatchTransformingAsyncCursor`2">
      <summary>
            Represents a cursor that wraps another cursor with a transformation function on the documents.
            </summary>
      <typeparam name="TFromDocument">The type of from document.</typeparam>
      <typeparam name="TToDocument">The type of to document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.#ctor(MongoDB.Driver.IAsyncCursor{`0},System.Func{System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BatchTransformingAsyncCursor`2" /> class.
            </summary>
      <param name="wrapped">The wrapped.</param>
      <param name="transformer">The transformer.</param>
    </member>
    <member name="P:MongoDB.Driver.BatchTransformingAsyncCursor`2.Current">
      <summary>
            Gets the current batch of documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.MoveNext(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>Whether any more documents are available.</returns>
    </member>
    <member name="M:MongoDB.Driver.BatchTransformingAsyncCursor`2.MoveNextAsync(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result indicates whether any more documents are available.</returns>
    </member>
    <member name="T:MongoDB.Driver.CollectionNamespace">
      <summary>
            Represents a collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.#ctor(MongoDB.Driver.DatabaseNamespace,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CollectionNamespace" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="collectionName">The name of the collection.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CollectionNamespace" /> class.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <param name="collectionName">The name of the collection.</param>
    </member>
    <member name="P:MongoDB.Driver.CollectionNamespace.CollectionName">
      <summary>
            Gets the name of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionNamespace.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.Equals(MongoDB.Driver.CollectionNamespace)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.FromFullName(System.String)">
      <summary>
            Creates a new instance of the <see cref="T:MongoDB.Driver.CollectionNamespace" /> class from a collection full name.
            </summary>
      <param name="fullName">The collection full name.</param>
      <returns>A CollectionNamespace.</returns>
    </member>
    <member name="P:MongoDB.Driver.CollectionNamespace.FullName">
      <summary>
            Gets the collection full name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.IsValid(System.String)">
      <summary>
            Determines whether the specified collection name is valid.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <returns>Whether the specified collection name is valid.</returns>
    </member>
    <member name="M:MongoDB.Driver.CollectionNamespace.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.DatabaseNamespace">
      <summary>
            Represents a database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DatabaseNamespace.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DatabaseNamespace" /> class.
            </summary>
      <param name="databaseName">The name of the database.</param>
    </member>
    <member name="P:MongoDB.Driver.DatabaseNamespace.Admin">
      <summary>
            Gets the admin database namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseNamespace.DatabaseName">
      <summary>
            Gets the name of the database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DatabaseNamespace.Equals(MongoDB.Driver.DatabaseNamespace)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.DatabaseNamespace.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.DatabaseNamespace.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.DatabaseNamespace.IsValid(System.String)">
      <summary>
            Determines whether the specified database name is valid.
            </summary>
      <param name="name">The database name.</param>
      <returns>True if the database name is valid.</returns>
    </member>
    <member name="M:MongoDB.Driver.DatabaseNamespace.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.DeferredAsyncCursor`1">
      <summary>
            Represents a cursor for an operation that is not actually executed until MoveNextAsync is called for the first time.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.#ctor(System.Func{System.Threading.CancellationToken,MongoDB.Driver.IAsyncCursor{`0}},System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{MongoDB.Driver.IAsyncCursor{`0}}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeferredAsyncCursor`1" /> class.
            </summary>
      <param name="execute">The delegate to execute the first time MoveNext is called.</param>
      <param name="executeAsync">The delegate to execute the first time MoveNextAsync is called.</param>
    </member>
    <member name="P:MongoDB.Driver.DeferredAsyncCursor`1.Current">
      <summary>
            Gets the current batch of documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.MoveNext(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>Whether any more documents are available.</returns>
    </member>
    <member name="M:MongoDB.Driver.DeferredAsyncCursor`1.MoveNextAsync(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result indicates whether any more documents are available.</returns>
    </member>
    <member name="T:MongoDB.Driver.DocumentValidationAction">
      <summary>
            Represents the document validation action.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.DocumentValidationAction.Error">
      <summary>
            Validation failures result in an error.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.DocumentValidationAction.Warn">
      <summary>
            Validation failures result in a warning.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DocumentValidationLevel">
      <summary>
            Represents the document validation level.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.DocumentValidationLevel.Strict">
      <summary>
            Strict document validation.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.DocumentValidationLevel.Moderate">
      <summary>
            Moderate document validation.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.DocumentValidationLevel.Off">
      <summary>
            No document validation.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IAsyncCursor`1">
      <summary>
            Represents an asynchronous cursor.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.IAsyncCursor`1.Current">
      <summary>
            Gets the current batch of documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursor`1.MoveNext(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>Whether any more documents are available.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursor`1.MoveNextAsync(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result indicates whether any more documents are available.</returns>
    </member>
    <member name="T:MongoDB.Driver.IAsyncCursorExtensions">
      <summary>
            Represents extension methods for IAsyncCursor.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.Any``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Determines whether the cursor contains any documents.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>True if the cursor contains any documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.AnyAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Determines whether the cursor contains any documents.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is true if the cursor contains any documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.First``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The first document.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.FirstAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the first document.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.FirstOrDefault``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor, or a default value if the cursor contains no documents.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The first document of the cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.FirstOrDefaultAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of the cursor, or a default value if the cursor contains no documents.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A task whose result is the first document of the cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Action{``0},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Action{``0,System.Int32},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Func{``0,System.Int32,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.Single``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The only document of a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.SingleAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the only document of a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.SingleOrDefault``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The only document of a cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.SingleOrDefaultAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the only document of a cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ToEnumerable``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Wraps a cursor in an IEnumerable that can be enumerated one time.
            </summary>
      <param name="cursor">The cursor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An IEnumerable</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ToList``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns a list containing all the documents returned by a cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The list of documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorExtensions.ToListAsync``1(MongoDB.Driver.IAsyncCursor{``0},System.Threading.CancellationToken)">
      <summary>
            Returns a list containing all the documents returned by a cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose value is the list of documents.</returns>
    </member>
    <member name="T:MongoDB.Driver.IAsyncCursorSource`1">
      <summary>
            Represents an operation that will return a cursor when executed.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSource`1.ToCursor(System.Threading.CancellationToken)">
      <summary>
            Executes the operation and returns a cursor to the results.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSource`1.ToCursorAsync(System.Threading.CancellationToken)">
      <summary>
            Executes the operation and returns a cursor to the results.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a cursor.</returns>
    </member>
    <member name="T:MongoDB.Driver.IAsyncCursorSourceExtensions">
      <summary>
            Represents extension methods for IAsyncCursorSource.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.Any``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Determines whether the cursor returned by a cursor source contains any documents.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>True if the cursor contains any documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.AnyAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Determines whether the cursor returned by a cursor source contains any documents.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is true if the cursor contains any documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.First``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor returned by a cursor source.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The first document.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.FirstAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor returned by a cursor source.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the first document.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.FirstOrDefault``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The first document of the cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.FirstOrDefaultAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the first document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the first document of the cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Action{``0},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Action{``0,System.Int32},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ForEachAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Func{``0,System.Int32,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>
            Calls a delegate for each document returned by the cursor.
            </summary>
      <param name="source">The source.</param>
      <param name="processor">The processor.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task that completes when all the documents have been processed.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.Single``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor returned by a cursor source. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The only document of a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.SingleAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor returned by a cursor source. This method throws an exception if the cursor does not contain exactly one document.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the only document of a cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.SingleOrDefault``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The only document of a cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.SingleOrDefaultAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns the only document of a cursor returned by a cursor source, or a default value if the cursor contains no documents.
            This method throws an exception if the cursor contains more than one document.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the only document of a cursor, or a default value if the cursor contains no documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ToEnumerable``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Wraps a cursor source in an IEnumerable. Each time GetEnumerator is called a new cursor is fetched from the cursor source.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An IEnumerable.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ToList``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns a list containing all the documents returned by the cursor returned by a cursor source.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The list of documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync``1(MongoDB.Driver.IAsyncCursorSource{``0},System.Threading.CancellationToken)">
      <summary>
            Returns a list containing all the documents returned by the cursor returned by a cursor source.
            </summary>
      <param name="source">The source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose value is the list of documents.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoAuthenticationException">
      <summary>
            Represents a MongoDB authentication exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoAuthenticationException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoAuthenticationException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoAuthenticationException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoClientException">
      <summary>
            Represents a MongoDB client exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoClientException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoClientException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoClientException" /> class.
            </summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoClientException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoClientException" /> class.
            </summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoCommandException">
      <summary>
            Represents a MongoDB command exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCommandException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The message.</param>
      <param name="command">The command.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCommandException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The message.</param>
      <param name="command">The command.</param>
      <param name="result">The command result.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCommandException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoCommandException.Code">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCommandException.Command">
      <summary>
            Gets the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCommandException.ErrorMessage">
      <summary>
            Gets the error message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCommandException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:MongoDB.Driver.MongoCommandException.Result">
      <summary>
            Gets the command result.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoConfigurationException">
      <summary>
            Represents a MongoDB configuration exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConfigurationException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoConfigurationException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConfigurationException" /> class.
            </summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoConfigurationException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConfigurationException" /> class.
            </summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoConnectionClosedException">
      <summary>
            Represents a MongoDB connection failed exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoConnectionClosedException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionClosedException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoConnectionClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionClosedException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoConnectionException">
      <summary>
            Represents a MongoDB connection exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoConnectionException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoConnectionException.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:MongoDB.Driver.MongoCursorNotFoundException">
      <summary>
            Represents a MongoDB cursor not found exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursorNotFoundException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int64,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCursorNotFoundException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="cursorId">The cursor identifier.</param>
      <param name="query">The query.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCursorNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCursorNotFoundException" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoCursorNotFoundException.CursorId">
      <summary>
            Gets the cursor identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursorNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:MongoDB.Driver.MongoDuplicateKeyException">
      <summary>
            Represents a MongoDB duplicate key exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDuplicateKeyException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Driver.WriteConcernResult)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDuplicateKeyException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="commandResult">The command result.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoDuplicateKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDuplicateKeyException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoException">
      <summary>
            Represents a MongoDB exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoException" /> class.
            </summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoException" /> class.
            </summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoExecutionTimeoutException">
      <summary>
            Represents a MongoDB execution timeout exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoExecutionTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExecutionTimeoutException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoIncompatibleDriverException">
      <summary>
            Represents a MongoDB incompatible driver exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoIncompatibleDriverException.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIncompatibleDriverException" /> class.
            </summary>
      <param name="clusterDescription">The cluster description.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoIncompatibleDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIncompatibleDriverException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoInternalException">
      <summary>
            Represents a MongoDB internal exception (almost surely the result of a bug).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalException" /> class.
            </summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalException" /> class.
            </summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoNodeIsRecoveringException">
      <summary>
            Represents a MongoDB node is recovering exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoNodeIsRecoveringException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNodeIsRecoveringException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="result">The result.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoNodeIsRecoveringException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNodeIsRecoveringException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoNodeIsRecoveringException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:MongoDB.Driver.MongoNodeIsRecoveringException.Result">
      <summary>
            Gets the result from the server.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoNotPrimaryException">
      <summary>
            Represents a MongoDB not primary exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoNotPrimaryException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNotPrimaryException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="result">The result.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoNotPrimaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoNotPrimaryException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoNotPrimaryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:MongoDB.Driver.MongoNotPrimaryException.Result">
      <summary>
            Gets the result from the server.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoQueryException">
      <summary>
            Represents a MongoDB query exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoQueryException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoQueryException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The message.</param>
      <param name="query">The query.</param>
      <param name="queryResult">The query result.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoQueryException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoQueryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:MongoDB.Driver.MongoQueryException.Query">
      <summary>
            Gets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoQueryException.QueryResult">
      <summary>
            Gets the query result.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoServerException">
      <summary>
            Represents a MongoDB server exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoServerException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoServerException.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:MongoDB.Driver.MongoWaitQueueFullException">
      <summary>
            Represents a MongoDB connection pool wait queue full exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoWaitQueueFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWaitQueueFullException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoWaitQueueFullException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWaitQueueFullException" /> class.
            </summary>
      <param name="message">The error message.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoWriteConcernException">
      <summary>
            Represents a MongoDB write concern exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoWriteConcernException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,MongoDB.Driver.WriteConcernResult)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteConcernException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="writeConcernResult">The command result.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoWriteConcernException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteConcernException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoWriteConcernException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:MongoDB.Driver.MongoWriteConcernException.WriteConcernResult">
      <summary>
            Gets the write concern result.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Optional">
      <summary>
            Represents helper methods for use with the <see cref="T:MongoDB.Driver.Optional`1" /> struct.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Optional.Create``1(``0)">
      <summary>
            Creates an instance of an optional parameter with a value.
            </summary>
      <param name="value">The value.</param>
      <typeparam name="T">The type of the optional parameter.</typeparam>
      <returns>An instance of an optional parameter with a value.</returns>
    </member>
    <member name="M:MongoDB.Driver.Optional.Enumerable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Creates an instance of an optional parameter with an enumerable value.
            </summary>
      <param name="value">The value.</param>
      <typeparam name="TItem">The type of the items of the optional paramater.</typeparam>
      <returns>An instance of an optional parameter with an enumerable value.</returns>
    </member>
    <member name="T:MongoDB.Driver.Optional`1">
      <summary>
            Represents an optional parameter that might or might not have a value.
            </summary>
      <typeparam name="T">The type of the parameter.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Optional`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Optional`1" /> struct with a value.
            </summary>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="P:MongoDB.Driver.Optional`1.HasValue">
      <summary>
            Gets a value indicating whether the optional parameter has a value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Optional`1.op_Implicit(`0)~MongoDB.Driver.Optional{`0}">
      <summary>
            Performs an implicit conversion from <see typeparamref="T" /> to an <see cref="T:MongoDB.Driver.Optional`1" /> with a value.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Optional`1.Replaces(`0)">
      <summary>
            Returns a value indicating whether this optional parameter contains a value that is not equal to an existing value.
            </summary>
      <param name="value">The value.</param>
      <returns>True if this optional parameter contains a value that is not equal to an existing value.</returns>
    </member>
    <member name="P:MongoDB.Driver.Optional`1.Value">
      <summary>
            Gets the value of the optional parameter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Optional`1.WithDefault(`0)">
      <summary>
            Returns either the value of this optional parameter if it has a value, otherwise a default value.
            </summary>
      <param name="value">The default value.</param>
      <returns>Either the value of this optional parameter if it has a value, otherwise a default value.</returns>
    </member>
    <member name="T:MongoDB.Driver.ReadConcern">
      <summary>
            Represents a read concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.#ctor(MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.ReadConcernLevel}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReadConcern" /> class.
            </summary>
      <param name="level">The level.</param>
    </member>
    <member name="P:MongoDB.Driver.ReadConcern.Default">
      <summary>
            Gets a default read concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.Equals(MongoDB.Driver.ReadConcern)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.FromBsonDocument(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates a read concern from a document.
            </summary>
      <param name="document">The document.</param>
      <returns>A read concern.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.ReadConcern.IsServerDefault">
      <summary>
            Gets a value indicating whether this is the server's default read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadConcern.Level">
      <summary>
            Gets the level.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadConcern.Local">
      <summary>
            Gets a local read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadConcern.Majority">
      <summary>
            Gets a majority read concern
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.ToBsonDocument">
      <summary>
            Converts this read concern to a BsonDocument suitable to be sent to the server.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.ReadConcern.With(MongoDB.Driver.Optional{System.Nullable{MongoDB.Driver.ReadConcernLevel}})">
      <summary>
            Returns a new instance of ReadConcern with some values changed.
            </summary>
      <param name="level">The level.</param>
      <returns>
            A ReadConcern.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.ReadConcernLevel">
      <summary>
            The leve of the read concern.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadConcernLevel.Local">
      <summary>
            Reads data committed locally.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadConcernLevel.Majority">
      <summary>
            Reads data committed to a majority of nodes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ReadPreference">
      <summary>
            Represents a read preference.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.#ctor(MongoDB.Driver.ReadPreferenceMode,System.Collections.Generic.IEnumerable{MongoDB.Driver.TagSet})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReadPreference" /> class.
            </summary>
      <param name="mode">The read preference mode.</param>
      <param name="tagSets">The tag sets.</param>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.Equals(MongoDB.Driver.ReadPreference)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.Nearest">
      <summary>
            Gets an instance of ReadPreference that represents a Nearest read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.Primary">
      <summary>
            Gets an instance of ReadPreference that represents a Primary read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.PrimaryPreferred">
      <summary>
            Gets an instance of ReadPreference that represents a PrimaryPreferred read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.ReadPreferenceMode">
      <summary>
            Gets the read preference mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.Secondary">
      <summary>
            Gets an instance of ReadPreference that represents a Secondary read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.SecondaryPreferred">
      <summary>
            Gets an instance of ReadPreference that represents a SecondaryPreferred read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ReadPreference.TagSets">
      <summary>
            Gets the tag sets.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.With(MongoDB.Driver.ReadPreferenceMode)">
      <summary>
            Returns a new instance of ReadPreference with some values changed.
            </summary>
      <param name="mode">The read preference mode.</param>
      <returns>A new instance of ReadPreference.</returns>
    </member>
    <member name="M:MongoDB.Driver.ReadPreference.With(System.Collections.Generic.IEnumerable{MongoDB.Driver.TagSet})">
      <summary>
            Returns a new instance of ReadPreference with some values changed.
            </summary>
      <param name="tagSets">The tag sets.</param>
      <returns>A new instance of ReadPreference.</returns>
    </member>
    <member name="T:MongoDB.Driver.ReadPreferenceMode">
      <summary>
            Represents the read preference mode.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadPreferenceMode.Primary">
      <summary>
            Reads should be from the primary.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadPreferenceMode.PrimaryPreferred">
      <summary>
            Reads should be from the primary if possible, otherwise from a secondary.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadPreferenceMode.Secondary">
      <summary>
            Reads should be from a secondary.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadPreferenceMode.SecondaryPreferred">
      <summary>
            Reads should be from a secondary if possible, otherwise from the primary.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ReadPreferenceMode.Nearest">
      <summary>
            Reads should be from any server that is within the latency threshold window.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ServerErrorCategory">
      <summary>
            Represents the category for an error from the server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ServerErrorCategory.Uncategorized">
      <summary>
            An error without a category.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ServerErrorCategory.DuplicateKey">
      <summary>
            A duplicate key error.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ServerErrorCategory.ExecutionTimeout">
      <summary>
            An execution timeout error.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Tag">
      <summary>
            Represents a replica set member tag.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Tag.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Tag" /> class.
            </summary>
      <param name="name">The name.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:MongoDB.Driver.Tag.Equals(MongoDB.Driver.Tag)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Tag.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Tag.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Tag.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Tag.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Tag.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.TagSet">
      <summary>
            Represents a replica set member tag set.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.TagSet.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.TagSet" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.TagSet.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.Tag})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.TagSet" /> class.
            </summary>
      <param name="tags">The tags.</param>
    </member>
    <member name="M:MongoDB.Driver.TagSet.ContainsAll(MongoDB.Driver.TagSet)">
      <summary>
            Determines whether the tag set contains all of the required tags.
            </summary>
      <param name="required">The required tags.</param>
      <returns>True if the tag set contains all of the required tags.</returns>
    </member>
    <member name="M:MongoDB.Driver.TagSet.Equals(MongoDB.Driver.TagSet)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.TagSet.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.TagSet.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.TagSet.IsEmpty">
      <summary>
            Gets a value indicating whether the tag set is empty.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.TagSet.Tags">
      <summary>
            Gets the tags.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.TagSet.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.WriteConcern">
      <summary>
            Represents a write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.#ctor(MongoDB.Driver.Optional{MongoDB.Driver.WriteConcern.WValue},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern" /> class.
            </summary>
      <param name="w">The w value.</param>
      <param name="wTimeout">The wtimeout value.</param>
      <param name="fsync">The fsync value .</param>
      <param name="journal">The journal value.</param>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.#ctor(System.Int32,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern" /> class.
            </summary>
      <param name="w">The w value.</param>
      <param name="wTimeout">The wtimeout value.</param>
      <param name="fsync">The fsync value .</param>
      <param name="journal">The journal value.</param>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.#ctor(System.String,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern" /> class.
            </summary>
      <param name="mode">The mode.</param>
      <param name="wTimeout">The wtimeout value.</param>
      <param name="fsync">The fsync value .</param>
      <param name="journal">The journal value.</param>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.Acknowledged">
      <summary>
            Gets an instance of WriteConcern that represents an acknowledged write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.Equals(MongoDB.Driver.WriteConcern)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.FromBsonDocument(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates a write concern from a document.
            </summary>
      <param name="document">The document.</param>
      <returns>A write concern.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.FSync">
      <summary>
            Gets the fsync value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.IsAcknowledged">
      <summary>
            Gets a value indicating whether this instance is an acknowledged write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.IsServerDefault">
      <summary>
            Gets a value indicating whether this write concern will use the default on the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.Journal">
      <summary>
            Gets the journal value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.ToBsonDocument">
      <summary>
            Converts this write concern to a BsonDocument suitable to be sent to the server.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.Unacknowledged">
      <summary>
            Gets an instance of WriteConcern that represents an unacknowledged write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.W">
      <summary>
            Gets the w value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.W1">
      <summary>
            Gets an instance of WriteConcern that represents a W1 write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.W2">
      <summary>
            Gets an instance of WriteConcern that represents a W2 write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.W3">
      <summary>
            Gets an instance of WriteConcern that represents a W3 write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.With(MongoDB.Driver.Optional{MongoDB.Driver.WriteConcern.WValue},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
      <summary>
            Returns a new instance of WriteConcern with some values changed.
            </summary>
      <param name="w">The w value.</param>
      <param name="wTimeout">The wtimeout value.</param>
      <param name="fsync">The fsync value.</param>
      <param name="journal">The journal value.</param>
      <returns>A WriteConcern.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.With(System.Int32,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
      <summary>
            Returns a new instance of WriteConcern with some values changed.
            </summary>
      <param name="w">The w value.</param>
      <param name="wTimeout">The wtimeout value.</param>
      <param name="fsync">The fsync value.</param>
      <param name="journal">The journal value.</param>
      <returns>A WriteConcern.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.With(System.String,MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}},MongoDB.Driver.Optional{System.Nullable{System.Boolean}})">
      <summary>
            Returns a new instance of WriteConcern with some values changed.
            </summary>
      <param name="mode">The mode.</param>
      <param name="wTimeout">The wtimeout value.</param>
      <param name="fsync">The fsync value.</param>
      <param name="journal">The journal value.</param>
      <returns>A WriteConcern.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.WMajority">
      <summary>
            Gets an instance of WriteConcern that represents a majority write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.WTimeout">
      <summary>
            Gets the wtimeout value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteConcern.WCount">
      <summary>
            Represents a numeric WValue.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WCount.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern.WCount" /> class.
            </summary>
      <param name="w">The w value.</param>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WCount.Equals(MongoDB.Driver.WriteConcern.WCount)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WCount.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WCount.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WCount.ToBsonValue">
      <summary>
            Converts this WValue to a BsonValue suitable to be included in a BsonDocument representing a write concern.
            </summary>
      <returns>A BsonValue.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WCount.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.WCount.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteConcern.WMode">
      <summary>
            Represents a mode string WValue.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WMode.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern.WMode" /> class.
            </summary>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WMode.Equals(MongoDB.Driver.WriteConcern.WMode)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WMode.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.WMode.Majority">
      <summary>
            Gets an instance of WValue that represents the majority mode.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WMode.ToBsonValue">
      <summary>
            Converts this WValue to a BsonValue suitable to be included in a BsonDocument representing a write concern.
            </summary>
      <returns>A BsonValue.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WMode.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.WriteConcern.WMode.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.WriteConcern.WValue">
      <summary>
            Represents the base class for w values.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WValue.Equals(MongoDB.Driver.WriteConcern.WValue)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.Int32)~MongoDB.Driver.WriteConcern.WValue">
      <summary>
            Performs an implicit conversion from <see cref="T:System.Int32" /> to <see cref="T:MongoDB.Driver.WriteConcern.WValue" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.Nullable{System.Int32})~MongoDB.Driver.WriteConcern.WValue">
      <summary>
            Performs an implicit conversion from Nullable{Int32} to <see cref="T:MongoDB.Driver.WriteConcern.WValue" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.String)~MongoDB.Driver.WriteConcern.WValue">
      <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.WriteConcern.WValue" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WValue.Parse(System.String)">
      <summary>
            Parses the specified value.
            </summary>
      <param name="value">The value.</param>
      <returns>A WValue.</returns>
    </member>
    <member name="M:MongoDB.Driver.WriteConcern.WValue.ToBsonValue">
      <summary>
            Converts this WValue to a BsonValue suitable to be included in a BsonDocument representing a write concern.
            </summary>
      <returns>A BsonValue.</returns>
    </member>
    <member name="T:MongoDB.Driver.WriteConcernResult">
      <summary>
            Represents the results of an operation performed with an acknowledged WriteConcern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.WriteConcernResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcernResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernResult.DocumentsAffected">
      <summary>
            Gets the number of documents affected.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernResult.HasLastErrorMessage">
      <summary>
            Gets whether the result has a LastErrorMessage.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernResult.LastErrorMessage">
      <summary>
            Gets the last error message (null if none).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernResult.Response">
      <summary>
            Gets the wrapped result.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernResult.UpdatedExisting">
      <summary>
            Gets whether the last command updated an existing document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.WriteConcernResult.Upserted">
      <summary>
            Gets the _id of an upsert that resulted in an insert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.DefaultAuthenticator">
      <summary>
            The default authenticator (uses SCRAM-SHA1 if possible, falls back to MONGODB-CR otherwise).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.DefaultAuthenticator.#ctor(MongoDB.Driver.Core.Authentication.UsernamePasswordCredential)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.DefaultAuthenticator" /> class.
            </summary>
      <param name="credential">The credential.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.DefaultAuthenticator.Authenticate(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.DefaultAuthenticator.AuthenticateAsync(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.DefaultAuthenticator.Name">
      <summary>
            Gets the name of the authenticator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.GssapiAuthenticator">
      <summary>
            A GSSAPI SASL authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.#ctor(MongoDB.Driver.Core.Authentication.UsernamePasswordCredential,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.GssapiAuthenticator" /> class.
            </summary>
      <param name="credential">The credential.</param>
      <param name="properties">The properties.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.GssapiAuthenticator" /> class.
            </summary>
      <param name="username">The username.</param>
      <param name="properties">The properties.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.CanonicalizeHostNamePropertyName">
      <summary>
            Gets the name of the canonicalize host name property.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.DatabaseName">
      <summary>
            Gets the name of the database.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.DefaultServiceName">
      <summary>
            Gets the default service name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.MechanismName">
      <summary>
            Gets the name of the mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.ServiceNamePropertyName">
      <summary>
            Gets the name of the service name property.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.GssapiAuthenticator.ServiceRealmPropertyName">
      <summary>
            Gets the name of the service realm property.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.IAuthenticator">
      <summary>
            Represents a connection authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.IAuthenticator.Authenticate(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.IAuthenticator.AuthenticateAsync(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.IAuthenticator.Name">
      <summary>
            Gets the name of the authenticator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator">
      <summary>
            A MONGODB-CR authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator.#ctor(MongoDB.Driver.Core.Authentication.UsernamePasswordCredential)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator" /> class.
            </summary>
      <param name="credential">The credential.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator.Authenticate(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator.AuthenticateAsync(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator.MechanismName">
      <summary>
            Gets the name of the mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator.Name">
      <summary>
            Gets the name of the authenticator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator">
      <summary>
            A MongoDB-X509 authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator" /> class.
            </summary>
      <param name="username">The username.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator.Authenticate(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator.AuthenticateAsync(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator.MechanismName">
      <summary>
            Gets the name of the mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator.Name">
      <summary>
            Gets the name of the authenticator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.PlainAuthenticator">
      <summary>
            A PLAIN SASL authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.PlainAuthenticator.#ctor(MongoDB.Driver.Core.Authentication.UsernamePasswordCredential)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.PlainAuthenticator" /> class.
            </summary>
      <param name="credential">The credential.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.PlainAuthenticator.DatabaseName">
      <summary>
            Gets the name of the database.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.PlainAuthenticator.MechanismName">
      <summary>
            Gets the name of the mechanism.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator">
      <summary>
            Base class for a SASL authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.#ctor(MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslMechanism)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator" /> class.
            </summary>
      <param name="mechanism">The mechanism.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.Authenticate(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.AuthenticateAsync(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription,System.Threading.CancellationToken)">
      <summary>
            Authenticates the connection.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.DatabaseName">
      <summary>
            Gets the name of the database.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.Name">
      <summary>
            Gets the name of the authenticator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep">
      <summary>
            Represents a completed SASL step.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep" /> class.
            </summary>
      <param name="bytesToSendToServer">The bytes to send to server.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep.BytesToSendToServer">
      <summary>
            Gets the bytes to send to server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep.IsComplete">
      <summary>
            Gets a value indicating whether this instance is complete.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.CompletedStep.Transition(MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation,System.Byte[])">
      <summary>
            Transitions the SASL conversation to the next step.
            </summary>
      <param name="conversation">The SASL conversation.</param>
      <param name="bytesReceivedFromServer">The bytes received from server.</param>
      <returns>The next SASL step.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslMechanism">
      <summary>
            Represents a SASL mechanism.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslMechanism.Initialize(MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core.Connections.ConnectionDescription)">
      <summary>
            Initializes the mechanism.
            </summary>
      <param name="connection">The connection.</param>
      <param name="description">The connection description.</param>
      <returns>The initial SASL step.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslMechanism.Name">
      <summary>
            Gets the name of the mechanism.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslStep">
      <summary>
            Represents a SASL step.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslStep.BytesToSendToServer">
      <summary>
            Gets the bytes to send to server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslStep.IsComplete">
      <summary>
            Gets a value indicating whether this instance is complete.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.ISaslStep.Transition(MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation,System.Byte[])">
      <summary>
            Transitions the SASL conversation to the next step.
            </summary>
      <param name="conversation">The SASL conversation.</param>
      <param name="bytesReceivedFromServer">The bytes received from server.</param>
      <returns>The next SASL step.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation">
      <summary>
            Represents a SASL conversation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation.#ctor(MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.SaslAuthenticator.SaslConversation.RegisterItemForDisposal(System.IDisposable)">
      <summary>
            Registers the item for disposal.
            </summary>
      <param name="item">The disposable item.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.ScramSha1Authenticator">
      <summary>
            A SCRAM-SHA1 SASL authenticator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.ScramSha1Authenticator.#ctor(MongoDB.Driver.Core.Authentication.UsernamePasswordCredential)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.ScramSha1Authenticator" /> class.
            </summary>
      <param name="credential">The credential.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.ScramSha1Authenticator.DatabaseName">
      <summary>
            Gets the name of the database.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.ScramSha1Authenticator.MechanismName">
      <summary>
            Gets the name of the mechanism.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential">
      <summary>
            Represents a username/password credential.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential.#ctor(System.String,System.String,System.Security.SecureString)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential" /> class.
            </summary>
      <param name="source">The source.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential" /> class.
            </summary>
      <param name="source">The source.</param>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential.GetInsecurePassword">
      <summary>
            Gets the password (converts the password from a SecureString to a regular string).
            </summary>
      <returns>The password.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential.Password">
      <summary>
            Gets the password.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential.Source">
      <summary>
            Gets the source.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Authentication.UsernamePasswordCredential.Username">
      <summary>
            Gets the username.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ChannelReadBinding">
      <summary>
            Represents a read binding that is bound to a channel.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadBinding.#ctor(MongoDB.Driver.Core.Servers.IServer,MongoDB.Driver.Core.Bindings.IChannelHandle,MongoDB.Driver.ReadPreference)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ChannelReadBinding" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="channel">The channel.</param>
      <param name="readPreference">The read preference.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ChannelReadBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding">
      <summary>
            Represents a read-write binding that is bound to a channel.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.#ctor(MongoDB.Driver.Core.Servers.IServer,MongoDB.Driver.Core.Bindings.IChannelHandle)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="channel">The channel.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ChannelSourceHandle">
      <summary>
            Represents a handle to a channel source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.#ctor(MongoDB.Driver.Core.Bindings.IChannelSource)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ChannelSourceHandle" /> class.
            </summary>
      <param name="channelSource">The channel source.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.Fork">
      <summary>
            Returns a new handle to the underlying channel source.
            </summary>
      <returns>A handle to a channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannel(System.Threading.CancellationToken)">
      <summary>
            Gets a channel.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.GetChannelAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a channel.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.Server">
      <summary>
            Gets the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ChannelSourceHandle.ServerDescription">
      <summary>
            Gets the server description.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding">
      <summary>
            Represents a read-write binding to a channel source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.#ctor(MongoDB.Driver.Core.Bindings.IChannelSourceHandle,MongoDB.Driver.ReadPreference)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding" /> class.
            </summary>
      <param name="channelSource">The channel source.</param>
      <param name="readPreference">The read preference.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IChannel">
      <summary>
            Represents a channel (similar to a connection but operates at the level of protocols rather than messages).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.Command``1(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Func{MongoDB.Driver.Core.WireProtocol.CommandResponseHandling},System.Boolean,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a Command protocol.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="command">The command.</param>
      <param name="commandValidator">The command validator.</param>
      <param name="responseHandling">The response handling.</param>
      <param name="slaveOk">if set to <c>true</c> sets the SlaveOk bit to true in the command message sent to the server.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The result of the Command protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.CommandAsync``1(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Func{MongoDB.Driver.Core.WireProtocol.CommandResponseHandling},System.Boolean,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a Command protocol.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="command">The command.</param>
      <param name="commandValidator">The command validator.</param>
      <param name="responseHandling">The response handling.</param>
      <param name="slaveOk">if set to <c>true</c> sets the SlaveOk bit to true in the command message sent to the server.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is the result of the Command protocol.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.IChannel.ConnectionDescription">
      <summary>
            Gets the connection description.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.Delete(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,System.Boolean,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.WriteConcern,System.Threading.CancellationToken)">
      <summary>
            Executes a Delete protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="isMulti">if set to <c>true</c> all matching documents are deleted.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="writeConcern">The write concern.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the Delete protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.DeleteAsync(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,System.Boolean,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.WriteConcern,System.Threading.CancellationToken)">
      <summary>
            Executes a Delete protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="isMulti">if set to <c>true</c> all matching documents are deleted.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="writeConcern">The write concern.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the Delete protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.GetMore``1(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,System.Int64,System.Int32,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a GetMore protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="cursorId">The cursor identifier.</param>
      <param name="batchSize">Size of the batch.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The result of the GetMore protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.GetMoreAsync``1(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,System.Int64,System.Int32,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a GetMore protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="cursorId">The cursor identifier.</param>
      <param name="batchSize">Size of the batch.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the result of the GetMore protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.Insert``1(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.WriteConcern,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.Core.Misc.BatchableSource{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Func{System.Boolean},System.Threading.CancellationToken)">
      <summary>
            Executes an Insert protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="writeConcern">The write concern.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="documentSource">The document source.</param>
      <param name="maxBatchCount">The maximum batch count.</param>
      <param name="maxMessageSize">Maximum size of the message.</param>
      <param name="continueOnError">if set to <c>true</c> the server will continue with subsequent Inserts even if errors occur.</param>
      <param name="shouldSendGetLastError">A delegate that determines whether to piggy-back a GetLastError messsage with the Insert message.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The result of the Insert protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.InsertAsync``1(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.WriteConcern,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.Core.Misc.BatchableSource{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Func{System.Boolean},System.Threading.CancellationToken)">
      <summary>
            Executes an Insert protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="writeConcern">The write concern.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="documentSource">The document source.</param>
      <param name="maxBatchCount">The maximum batch count.</param>
      <param name="maxMessageSize">Maximum size of the message.</param>
      <param name="continueOnError">if set to <c>true</c> the server will continue with subsequent Inserts even if errors occur.</param>
      <param name="shouldSendGetLastError">A delegate that determines whether to piggy-back a GetLastError messsage with the Insert message.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the result of the Insert protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.KillCursors(System.Collections.Generic.IEnumerable{System.Int64},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a KillCursors protocol.
            </summary>
      <param name="cursorIds">The cursor ids.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.KillCursorsAsync(System.Collections.Generic.IEnumerable{System.Int64},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a KillCursors protocol.
            </summary>
      <param name="cursorIds">The cursor ids.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task that represents the KillCursors protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.Query``1(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a Query protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="fields">The fields.</param>
      <param name="queryValidator">The query validator.</param>
      <param name="skip">The number of documents to skip.</param>
      <param name="batchSize">The size of a batch.</param>
      <param name="slaveOk">if set to <c>true</c> sets the SlaveOk bit to true in the query message sent to the server.</param>
      <param name="partialOk">if set to <c>true</c> the server is allowed to return partial results if any shards are unavailable.</param>
      <param name="noCursorTimeout">if set to <c>true</c> the server will not timeout the cursor.</param>
      <param name="oplogReplay">if set to <c>true</c> the OplogReplay bit will be set.</param>
      <param name="tailableCursor">if set to <c>true</c> the query should return a tailable cursor.</param>
      <param name="awaitData">if set to <c>true</c> the server should await awhile before returning an empty batch for a tailable cursor.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>The result of the Insert protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.QueryAsync``1(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Executes a Query protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="fields">The fields.</param>
      <param name="queryValidator">The query validator.</param>
      <param name="skip">The number of documents to skip.</param>
      <param name="batchSize">The size of a batch.</param>
      <param name="slaveOk">if set to <c>true</c> sets the SlaveOk bit to true in the query message sent to the server.</param>
      <param name="partialOk">if set to <c>true</c> the server is allowed to return partial results if any shards are unavailable.</param>
      <param name="noCursorTimeout">if set to <c>true</c> the server will not timeout the cursor.</param>
      <param name="oplogReplay">if set to <c>true</c> the OplogReplay bit will be set.</param>
      <param name="tailableCursor">if set to <c>true</c> the query should return a tailable cursor.</param>
      <param name="awaitData">if set to <c>true</c> the server should await awhile before returning an empty batch for a tailable cursor.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A Task whose result is the result of the Insert protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.Update(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.WriteConcern,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
      <summary>
            Executes an Update protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="writeConcern">The write concern.</param>
      <param name="query">The query.</param>
      <param name="update">The update.</param>
      <param name="updateValidator">The update validator.</param>
      <param name="isMulti">if set to <c>true</c> the Update can affect multiple documents.</param>
      <param name="isUpsert">if set to <c>true</c> the document will be inserted if it is not found.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the Update protocol.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannel.UpdateAsync(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.WriteConcern,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
      <summary>
            Executes an Update protocol.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="writeConcern">The write concern.</param>
      <param name="query">The query.</param>
      <param name="update">The update.</param>
      <param name="updateValidator">The update validator.</param>
      <param name="isMulti">if set to <c>true</c> the Update can affect multiple documents.</param>
      <param name="isUpsert">if set to <c>true</c> the document will be inserted if it is not found.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the Update protocol.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IChannelHandle">
      <summary>
            Represents a handle to a channel.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannelHandle.Fork">
      <summary>
            Returns a new handle to the underlying channel.
            </summary>
      <returns>A channel handle.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IChannelSource">
      <summary>
            Represents a channel source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannelSource.GetChannel(System.Threading.CancellationToken)">
      <summary>
            Gets a channel.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannelSource.GetChannelAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a channel.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.IChannelSource.Server">
      <summary>
            Gets the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.IChannelSource.ServerDescription">
      <summary>
            Gets the server description.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IChannelSourceHandle">
      <summary>
            Represents a handle to a channel source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IChannelSourceHandle.Fork">
      <summary>
            Returns a new handle to the underlying channel source.
            </summary>
      <returns>A handle to a channel source.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IReadBinding">
      <summary>
            Represents a binding that determines which channel source gets used for read operations.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IReadBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IReadBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.IReadBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IReadBindingHandle">
      <summary>
            Represents a handle to a read binding.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IReadBindingHandle.Fork">
      <summary>
            Returns a new handle to the underlying read binding.
            </summary>
      <returns>A read binding handle.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IReadWriteBinding">
      <summary>
            Represents a binding that can be used for both read and write operations.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IReadWriteBindingHandle">
      <summary>
            Represents a handle to a read-write binding.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IReadWriteBindingHandle.Fork">
      <summary>
            Returns a new handle to the underlying read-write binding.
            </summary>
      <returns>A read-write binding handle.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IWriteBinding">
      <summary>
            Represents a binding that determines which channel source gets used for write operations.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IWriteBinding.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IWriteBinding.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.IWriteBindingHandle">
      <summary>
            Represents a handle to a write binding.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.IWriteBindingHandle.Fork">
      <summary>
            Returns a new handle to the underlying write binding.
            </summary>
      <returns>A write binding handle.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ReadBindingHandle">
      <summary>
            Represents a handle to a read binding.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadBindingHandle.#ctor(MongoDB.Driver.Core.Bindings.IReadBinding)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ReadBindingHandle" /> class.
            </summary>
      <param name="readBinding">The read binding.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadBindingHandle.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadBindingHandle.Fork">
      <summary>
            Returns a new handle to the underlying read binding.
            </summary>
      <returns>A read binding handle.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadBindingHandle.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadBindingHandle.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ReadBindingHandle.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding">
      <summary>
            Represents a read binding to a cluster using a ReadPreference to select the server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.#ctor(MongoDB.Driver.Core.Clusters.ICluster,MongoDB.Driver.ReadPreference)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding" /> class.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="readPreference">The read preference.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle">
      <summary>
            Represents a handle to a read-write binding.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.#ctor(MongoDB.Driver.Core.Bindings.IReadWriteBinding)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle" /> class.
            </summary>
      <param name="writeBinding">The write binding.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.Fork">
      <summary>
            Returns a new handle to the underlying read-write binding.
            </summary>
      <returns>A read-write binding handle.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.ServerChannelSource">
      <summary>
            Represents a channel source that is bound to a server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ServerChannelSource.#ctor(MongoDB.Driver.Core.Servers.IServer)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.ServerChannelSource" /> class.
            </summary>
      <param name="server">The server.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ServerChannelSource.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannel(System.Threading.CancellationToken)">
      <summary>
            Gets a channel.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.ServerChannelSource.GetChannelAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a channel.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ServerChannelSource.Server">
      <summary>
            Gets the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.ServerChannelSource.ServerDescription">
      <summary>
            Gets the server description.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.SingleServerReadBinding">
      <summary>
            Represents a read binding to a single server;
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadBinding.#ctor(MongoDB.Driver.Core.Servers.IServer,MongoDB.Driver.ReadPreference)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.SingleServerReadBinding" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="readPreference">The read preference.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.SingleServerReadBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding">
      <summary>
            Represents a read/write binding to a single server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.#ctor(MongoDB.Driver.Core.Servers.IServer)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding" /> class.
            </summary>
      <param name="server">The server.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding">
      <summary>
            Represents a split read-write binding, where the reads use one binding and the writes use another.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.#ctor(MongoDB.Driver.Core.Bindings.IReadBinding,MongoDB.Driver.Core.Bindings.IWriteBinding)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding" /> class.
            </summary>
      <param name="readBinding">The read binding.</param>
      <param name="writeBinding">The write binding.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.#ctor(MongoDB.Driver.Core.Clusters.ICluster,MongoDB.Driver.ReadPreference)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding" /> class.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="readPreference">The read preference.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.SplitReadWriteBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Bindings.WritableServerBinding">
      <summary>
            Represents a write binding to a writable server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.WritableServerBinding.#ctor(MongoDB.Driver.Core.Clusters.ICluster)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Bindings.WritableServerBinding" /> class.
            </summary>
      <param name="cluster">The cluster.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.WritableServerBinding.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.WritableServerBinding.GetReadChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.WritableServerBinding.GetReadChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for read operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.WritableServerBinding.GetWriteChannelSource(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Bindings.WritableServerBinding.GetWriteChannelSourceAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel source for write operations.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel source.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Bindings.WritableServerBinding.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ClusterConnectionMode">
      <summary>
            Represents the cluster connection mode.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterConnectionMode.Automatic">
      <summary>
            Determine the cluster type automatically.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterConnectionMode.Direct">
      <summary>
            Connect directly to a single server of any type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterConnectionMode.Standalone">
      <summary>
            Connect directly to a Standalone server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterConnectionMode.ReplicaSet">
      <summary>
            Connect to a replica set.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterConnectionMode.Sharded">
      <summary>
            Connect to one or more shard routers.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ClusterDescription">
      <summary>
            Represents information about a cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core.Clusters.ClusterConnectionMode,MongoDB.Driver.Core.Clusters.ClusterType,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterDescription" /> class.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="connectionMode">The connection mode.</param>
      <param name="type">The type.</param>
      <param name="servers">The servers.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.ConnectionMode">
      <summary>
            Gets the connection mode.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.Equals(MongoDB.Driver.Core.Clusters.ClusterDescription)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.Servers">
      <summary>
            Gets the servers.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.State">
      <summary>
            Gets the cluster state.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescription.Type">
      <summary>
            Gets the cluster type.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithoutServerDescription(System.Net.EndPoint)">
      <summary>
            Returns a new ClusterDescription with a ServerDescription removed.
            </summary>
      <param name="endPoint">The end point of the server description to remove.</param>
      <returns>A ClusterDescription.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithServerDescription(MongoDB.Driver.Core.Servers.ServerDescription)">
      <summary>
            Returns a new ClusterDescription with a changed ServerDescription.
            </summary>
      <param name="value">The server description.</param>
      <returns>A ClusterDescription.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescription.WithType(MongoDB.Driver.Core.Clusters.ClusterType)">
      <summary>
            Returns a new ClusterDescription with a changed ClusterType.
            </summary>
      <param name="value">The value.</param>
      <returns>A ClusterDescription.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs">
      <summary>
            Represents the data for the event that fires when a cluster description changes.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ClusterDescription)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs" /> class.
            </summary>
      <param name="oldClusterDescription">The old cluster description.</param>
      <param name="newClusterDescription">The new cluster description.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs.NewClusterDescription">
      <summary>
            Gets the new cluster description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs.OldClusterDescription">
      <summary>
            Gets the old cluster description.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ClusterId">
      <summary>
            Represents a cluster identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterId" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ClusterId" /> class.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.Equals(MongoDB.Driver.Core.Clusters.ClusterId)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ClusterId.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ClusterId.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ClusterState">
      <summary>
            Represents the state of a cluster.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterState.Disconnected">
      <summary>
            The cluster is disconnected.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterState.Connected">
      <summary>
            The cluster is connected.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ClusterType">
      <summary>
            Represents the type of a cluster.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.Unknown">
      <summary>
            The type of the cluster is unknown.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.Standalone">
      <summary>
            The cluster is a standalone cluster.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.ReplicaSet">
      <summary>
            The cluster is a replica set.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Clusters.ClusterType.Sharded">
      <summary>
            The cluster is a sharded cluster.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ElectionId">
      <summary>
            An election id from the server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.#ctor(MongoDB.Bson.ObjectId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ElectionId" /> class.
            </summary>
      <param name="id">The identifier.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.CompareTo(MongoDB.Driver.Core.Clusters.ElectionId)">
      <summary>
            Compares the current object with another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.Equals(MongoDB.Driver.Core.Clusters.ElectionId)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ElectionId.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ICluster">
      <summary>
            Represents a MongoDB cluster.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ICluster.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ICluster.Description">
      <summary>
            Gets the cluster description.
            </summary>
    </member>
    <member name="E:MongoDB.Driver.Core.Clusters.ICluster.DescriptionChanged">
      <summary>
            Occurs when the cluster description has changed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ICluster.Initialize">
      <summary>
            Initializes the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ICluster.SelectServer(MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,System.Threading.CancellationToken)">
      <summary>
            Selects a server from the cluster.
            </summary>
      <param name="selector">The server selector.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The selected server.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ICluster.SelectServerAsync(MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,System.Threading.CancellationToken)">
      <summary>
            Selects a server from the cluster.
            </summary>
      <param name="selector">The server selector.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task representing the operation. The result of the Task is the selected server.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ICluster.Settings">
      <summary>
            Gets the cluster settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.IClusterFactory">
      <summary>
            Represents a cluster factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.IClusterFactory.CreateCluster">
      <summary>
            Creates a cluster.
            </summary>
      <returns>A cluster.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ReplicaSetConfig">
      <summary>
            Represents the config of a replica set (as reported by one of the members of the replica set).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.#ctor(System.Collections.Generic.IEnumerable{System.Net.EndPoint},System.String,System.Net.EndPoint,System.Nullable{System.Int32})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ReplicaSetConfig" /> class.
            </summary>
      <param name="members">The members.</param>
      <param name="name">The name.</param>
      <param name="primary">The primary.</param>
      <param name="version">The version.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Empty">
      <summary>
            Gets an empty replica set config.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Equals(MongoDB.Driver.Core.Clusters.ReplicaSetConfig)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Members">
      <summary>
            Gets the members.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Name">
      <summary>
            Gets the name of the replica set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Primary">
      <summary>
            Gets the primary.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ReplicaSetConfig.Version">
      <summary>
            Gets the replica set config version.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector">
      <summary>
            Represents a selector that selects servers based on multiple partial selectors
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector" /> class.
            </summary>
      <param name="selectors">The selectors.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector">
      <summary>
            Represents a server selector that wraps a delegate.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector.#ctor(System.Func{MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription},System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector" /> class.
            </summary>
      <param name="selector">The selector.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector">
      <summary>
            Represents a selector that selects servers based on an end point.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector.#ctor(System.Net.EndPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector" /> class.
            </summary>
      <param name="endPoint">The end point.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector">
      <summary>
            Represents a selector that selects servers.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector">
      <summary>
            Represents a selector that selects servers within an acceptable latency range.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.#ctor(System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector" /> class.
            </summary>
      <param name="allowedLatencyRange">The allowed latency range.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector">
      <summary>
            Represents a selector that selects a random server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector">
      <summary>
            Represents a selector that selects servers based on a read preference.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.#ctor(MongoDB.Driver.ReadPreference)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector" /> class.
            </summary>
      <param name="readPreference">The read preference.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.Primary">
      <summary>
            Gets a ReadPreferenceServerSelector that selects the Primary.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector">
      <summary>
            Represents a server selector that selects writable servers.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.Instance">
      <summary>
            Gets a WritableServerSelector.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.SelectServers(MongoDB.Driver.Core.Clusters.ClusterDescription,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Servers.ServerDescription})">
      <summary>
            Selects the servers.
            </summary>
      <param name="cluster">The cluster.</param>
      <param name="servers">The servers.</param>
      <returns>The selected servers.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ClusterBuilder">
      <summary>
            Represents a cluster builder.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ClusterBuilder" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.BuildCluster">
      <summary>
            Builds the cluster.
            </summary>
      <returns>A cluster.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureCluster(System.Func{MongoDB.Driver.Core.Configuration.ClusterSettings,MongoDB.Driver.Core.Configuration.ClusterSettings})">
      <summary>
            Configures the cluster settings.
            </summary>
      <param name="configurator">The cluster settings configurator delegate.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureConnection(System.Func{MongoDB.Driver.Core.Configuration.ConnectionSettings,MongoDB.Driver.Core.Configuration.ConnectionSettings})">
      <summary>
            Configures the connection settings.
            </summary>
      <param name="configurator">The connection settings configurator delegate.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureConnectionPool(System.Func{MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings})">
      <summary>
            Configures the connection pool settings.
            </summary>
      <param name="configurator">The connection pool settings configurator delegate.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureServer(System.Func{MongoDB.Driver.Core.Configuration.ServerSettings,MongoDB.Driver.Core.Configuration.ServerSettings})">
      <summary>
            Configures the server settings.
            </summary>
      <param name="configurator">The server settings configurator delegate.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureSsl(System.Func{MongoDB.Driver.Core.Configuration.SslStreamSettings,MongoDB.Driver.Core.Configuration.SslStreamSettings})">
      <summary>
            Configures the SSL stream settings.
            </summary>
      <param name="configurator">The SSL stream settings configurator delegate.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.ConfigureTcp(System.Func{MongoDB.Driver.Core.Configuration.TcpStreamSettings,MongoDB.Driver.Core.Configuration.TcpStreamSettings})">
      <summary>
            Configures the TCP stream settings.
            </summary>
      <param name="configurator">The TCP stream settings configurator delegate.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.RegisterStreamFactory(System.Func{MongoDB.Driver.Core.Connections.IStreamFactory,MongoDB.Driver.Core.Connections.IStreamFactory})">
      <summary>
            Registers a stream factory wrapper.
            </summary>
      <param name="wrapper">The stream factory wrapper.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.Subscribe(MongoDB.Driver.Core.Events.IEventSubscriber)">
      <summary>
            Subscribes the specified subscriber.
            </summary>
      <param name="subscriber">The subscriber.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilder.Subscribe``1(System.Action{``0})">
      <summary>
            Subscribes to events of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions">
      <summary>
            Extension methods for a ClusterBuilder.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.ConfigureWithConnectionString(MongoDB.Driver.Core.Configuration.ClusterBuilder,MongoDB.Driver.Core.Configuration.ConnectionString)">
      <summary>
            Configures a cluster builder from a connection string.
            </summary>
      <param name="builder">The cluster builder.</param>
      <param name="connectionString">The connection string.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.ConfigureWithConnectionString(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.String)">
      <summary>
            Configures a cluster builder from a connection string.
            </summary>
      <param name="builder">The cluster builder.</param>
      <param name="connectionString">The connection string.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.TraceCommandsWith(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.Diagnostics.TraceSource)">
      <summary>
            Configures the cluster to trace command events to the specified <paramref name="traceSource" />.
            </summary>
      <param name="builder">The builder.</param>
      <param name="traceSource">The trace source.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.TraceWith(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.Diagnostics.TraceSource)">
      <summary>
            Configures the cluster to trace events to the specified <paramref name="traceSource" />.
            </summary>
      <param name="builder">The builder.</param>
      <param name="traceSource">The trace source.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterBuilderExtensions.UsePerformanceCounters(MongoDB.Driver.Core.Configuration.ClusterBuilder,System.String,System.Boolean)">
      <summary>
            Configures the cluster to write performance counters.
            </summary>
      <param name="builder">The cluster builder.</param>
      <param name="applicationName">The name of the application.</param>
      <param name="install">if set to <c>true</c> install the performance counters first.</param>
      <returns>A reconfigured cluster builder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ClusterSettings">
      <summary>
            Represents settings for a cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterSettings.#ctor(MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ClusterConnectionMode},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Net.EndPoint}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ClusterSettings" /> class.
            </summary>
      <param name="connectionMode">The connection mode.</param>
      <param name="endPoints">The end points.</param>
      <param name="maxServerSelectionWaitQueueSize">Maximum size of the server selection wait queue.</param>
      <param name="replicaSetName">Name of the replica set.</param>
      <param name="serverSelectionTimeout">The server selection timeout.</param>
      <param name="preServerSelector">The pre server selector.</param>
      <param name="postServerSelector">The post server selector.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.ConnectionMode">
      <summary>
            Gets the connection mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.EndPoints">
      <summary>
            Gets the end points.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.MaxServerSelectionWaitQueueSize">
      <summary>
            Gets the maximum size of the server selection wait queue.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.PostServerSelector">
      <summary>
            Gets the post server selector.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.PreServerSelector">
      <summary>
            Gets the pre server selector.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.ReplicaSetName">
      <summary>
            Gets the name of the replica set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ClusterSettings.ServerSelectionTimeout">
      <summary>
            Gets the server selection timeout.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ClusterSettings.With(MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ClusterConnectionMode},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Net.EndPoint}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector})">
      <summary>
            Returns a new ClusterSettings instance with some settings changed.
            </summary>
      <param name="connectionMode">The connection mode.</param>
      <param name="endPoints">The end points.</param>
      <param name="maxServerSelectionWaitQueueSize">Maximum size of the server selection wait queue.</param>
      <param name="replicaSetName">Name of the replica set.</param>
      <param name="serverSelectionTimeout">The server selection timeout.</param>
      <param name="preServerSelector">The pre server selector.</param>
      <param name="postServerSelector">The post server selector.</param>
      <returns>A new ClusterSettings instance.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings">
      <summary>
            Represents settings for a connection pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.#ctor(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.TimeSpan})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings" /> class.
            </summary>
      <param name="maintenanceInterval">The maintenance interval.</param>
      <param name="maxConnections">The maximum number of connections.</param>
      <param name="minConnections">The minimum number of connections.</param>
      <param name="waitQueueSize">Size of the wait queue.</param>
      <param name="waitQueueTimeout">The wait queue timeout.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MaintenanceInterval">
      <summary>
            Gets the maintenance interval.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MaxConnections">
      <summary>
            Gets the maximum number of connections.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.MinConnections">
      <summary>
            Gets the minimum number of connections.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.WaitQueueSize">
      <summary>
            Gets the size of the wait queue.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.WaitQueueTimeout">
      <summary>
            Gets the wait queue timeout.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionPoolSettings.With(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.TimeSpan})">
      <summary>
            Returns a new ConnectionPoolSettings instance with some settings changed.
            </summary>
      <param name="maintenanceInterval">The maintenance interval.</param>
      <param name="maxConnections">The maximum connections.</param>
      <param name="minConnections">The minimum connections.</param>
      <param name="waitQueueSize">Size of the wait queue.</param>
      <param name="waitQueueTimeout">The wait queue timeout.</param>
      <returns>A new ConnectionPoolSettings instance.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ConnectionSettings">
      <summary>
            Represents settings for a connection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionSettings.#ctor(MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Authentication.IAuthenticator}},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionSettings" /> class.
            </summary>
      <param name="authenticators">The authenticators.</param>
      <param name="maxIdleTime">The maximum idle time.</param>
      <param name="maxLifeTime">The maximum life time.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.Authenticators">
      <summary>
            Gets the authenticators.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.MaxIdleTime">
      <summary>
            Gets the maximum idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionSettings.MaxLifeTime">
      <summary>
            Gets the maximum life time.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionSettings.With(MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Authentication.IAuthenticator}},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan})">
      <summary>
            Returns a new ConnectionSettings instance with some settings changed.
            </summary>
      <param name="authenticators">The authenticators.</param>
      <param name="maxIdleTime">The maximum idle time.</param>
      <param name="maxLifeTime">The maximum life time.</param>
      <returns>A new ConnectionSettings instance.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ConnectionString">
      <summary>
            Represents a connection string.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ConnectionString" /> class.
            </summary>
      <param name="connectionString">The connection string.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AllOptionNames">
      <summary>
            Gets all the option names.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AllUnknownOptionNames">
      <summary>
            Gets all the unknown option names.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AuthMechanism">
      <summary>
            Gets the auth mechanism.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AuthMechanismProperties">
      <summary>
            Gets the auth mechanism properties.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.AuthSource">
      <summary>
            Gets the auth source.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Connect">
      <summary>
            Gets the connection mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ConnectTimeout">
      <summary>
            Gets the connect timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.DatabaseName">
      <summary>
            Gets the name of the database.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.FSync">
      <summary>
            Gets the fsync value of the write concern.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.GetOption(System.String)">
      <summary>
            Gets the option.
            </summary>
      <param name="name">The name.</param>
      <returns>The option with the specified name.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Hosts">
      <summary>
            Gets the hosts.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Ipv6">
      <summary>
            Gets whether to use IPv6.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Journal">
      <summary>
            Gets the journal value of the write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.LocalThreshold">
      <summary>
            Gets the local threshold.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxIdleTime">
      <summary>
            Gets the max idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxLifeTime">
      <summary>
            Gets the max life time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MaxPoolSize">
      <summary>
            Gets the max size of the connection pool.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.MinPoolSize">
      <summary>
            Gets the min size of the connection pool.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Password">
      <summary>
            Gets the password.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReadConcernLevel">
      <summary>
            Gets the read concern level.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReadPreference">
      <summary>
            Gets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReadPreferenceTags">
      <summary>
            Gets the read preference tags.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ReplicaSet">
      <summary>
            Gets the replica set name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.ServerSelectionTimeout">
      <summary>
            Gets the server selection timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.SocketTimeout">
      <summary>
            Gets the socket timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Ssl">
      <summary>
            Gets whether to use SSL.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.SslVerifyCertificate">
      <summary>
            Gets whether to verify SSL certificates.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ConnectionString.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.Username">
      <summary>
            Gets the username.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.UuidRepresentation">
      <summary>
            Gets the UUID representation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.W">
      <summary>
            Gets the w value of the write concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WaitQueueMultiple">
      <summary>
            Gets the wait queue multiple.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WaitQueueSize">
      <summary>
            Gets the wait queue size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WaitQueueTimeout">
      <summary>
            Gets the wait queue timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ConnectionString.WTimeout">
      <summary>
            Gets the wtimeout value of the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.ServerSettings">
      <summary>
            Represents settings for a server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ServerSettings.#ctor(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.ServerSettings" /> class.
            </summary>
      <param name="heartbeatInterval">The heartbeat interval.</param>
      <param name="heartbeatTimeout">The heartbeat timeout.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.HeartbeatInterval">
      <summary>
            Gets the heartbeat interval.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.ServerSettings.HeartbeatTimeout">
      <summary>
            Gets the heartbeat timeout.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.ServerSettings.With(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.TimeSpan})">
      <summary>
            Returns a new ServerSettings instance with some settings changed.
            </summary>
      <param name="heartbeatInterval">The heartbeat interval.</param>
      <param name="heartbeatTimeout">The heartbeat timeout.</param>
      <returns>A new ServerSettings instance.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.SslStreamSettings">
      <summary>
            Represents settings for an SSL stream.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.SslStreamSettings.#ctor(MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate}},MongoDB.Driver.Optional{System.Net.Security.LocalCertificateSelectionCallback},MongoDB.Driver.Optional{System.Security.Authentication.SslProtocols},MongoDB.Driver.Optional{System.Net.Security.RemoteCertificateValidationCallback})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.SslStreamSettings" /> class.
            </summary>
      <param name="checkCertificateRevocation">Whether to check for certificate revocation.</param>
      <param name="clientCertificates">The client certificates.</param>
      <param name="clientCertificateSelectionCallback">The client certificate selection callback.</param>
      <param name="enabledProtocols">The enabled protocols.</param>
      <param name="serverCertificateValidationCallback">The server certificate validation callback.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.CheckCertificateRevocation">
      <summary>
            Gets a value indicating whether to check for certificate revocation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.ClientCertificates">
      <summary>
            Gets the client certificates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.ClientCertificateSelectionCallback">
      <summary>
            Gets the client certificate selection callback.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.EnabledSslProtocols">
      <summary>
            Gets the enabled SSL protocols.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.SslStreamSettings.ServerCertificateValidationCallback">
      <summary>
            Gets the server certificate validation callback.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.SslStreamSettings.With(MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IEnumerable{System.Security.Cryptography.X509Certificates.X509Certificate}},MongoDB.Driver.Optional{System.Net.Security.LocalCertificateSelectionCallback},MongoDB.Driver.Optional{System.Security.Authentication.SslProtocols},MongoDB.Driver.Optional{System.Net.Security.RemoteCertificateValidationCallback})">
      <summary>
            Returns a new SsslStreamSettings instance with some settings changed.
            </summary>
      <param name="checkCertificateRevocation">Whether to check certificate revocation.</param>
      <param name="clientCertificates">The client certificates.</param>
      <param name="clientCertificateSelectionCallback">The client certificate selection callback.</param>
      <param name="enabledProtocols">The enabled protocols.</param>
      <param name="serverCertificateValidationCallback">The server certificate validation callback.</param>
      <returns>A new SsslStreamSettings instance.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Configuration.TcpStreamSettings">
      <summary>
            Represents settings for a TCP stream.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.TcpStreamSettings.#ctor(MongoDB.Driver.Optional{System.Net.Sockets.AddressFamily},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Action{System.Net.Sockets.Socket}},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Configuration.TcpStreamSettings" /> class.
            </summary>
      <param name="addressFamily">The address family.</param>
      <param name="connectTimeout">The connect timeout.</param>
      <param name="readTimeout">The read timeout.</param>
      <param name="receiveBufferSize">Size of the receive buffer.</param>
      <param name="sendBufferSize">Size of the send buffer.</param>
      <param name="socketConfigurator">The socket configurator.</param>
      <param name="writeTimeout">The write timeout.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.AddressFamily">
      <summary>
            Gets the address family.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.ConnectTimeout">
      <summary>
            Gets the connect timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.ReadTimeout">
      <summary>
            Gets the read timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.ReceiveBufferSize">
      <summary>
            Gets the size of the receive buffer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.SendBufferSize">
      <summary>
            Gets the size of the send buffer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.SocketConfigurator">
      <summary>
            Gets the socket configurator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Configuration.TcpStreamSettings.With(MongoDB.Driver.Optional{System.Net.Sockets.AddressFamily},MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Action{System.Net.Sockets.Socket}},MongoDB.Driver.Optional{System.Nullable{System.TimeSpan}})">
      <summary>
            Returns a new TcpStreamSettings instance with some settings changed.
            </summary>
      <param name="addressFamily">The address family.</param>
      <param name="connectTimeout">The connect timeout.</param>
      <param name="readTimeout">The read timeout.</param>
      <param name="receiveBufferSize">Size of the receive buffer.</param>
      <param name="sendBufferSize">Size of the send buffer.</param>
      <param name="socketConfigurator">The socket configurator.</param>
      <param name="writeTimeout">The write timeout.</param>
      <returns>A new TcpStreamSettings instance.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Configuration.TcpStreamSettings.WriteTimeout">
      <summary>
            Gets the write timeout.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.ConnectionPools.IConnectionPool">
      <summary>
            Represents a connection pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.ConnectionPools.IConnectionPool.AcquireConnection(System.Threading.CancellationToken)">
      <summary>
            Acquires a connection.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A connection.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.ConnectionPools.IConnectionPool.AcquireConnectionAsync(System.Threading.CancellationToken)">
      <summary>
            Acquires a connection.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a connection.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.ConnectionPools.IConnectionPool.Clear">
      <summary>
            Clears the connection pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.ConnectionPools.IConnectionPool.Initialize">
      <summary>
            Initializes the connection pool.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.ConnectionPools.IConnectionPool.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.ConnectionPools.IConnectionPoolFactory">
      <summary>
            Represents a connection pool factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.ConnectionPools.IConnectionPoolFactory.CreateConnectionPool(MongoDB.Driver.Core.Servers.ServerId,System.Net.EndPoint)">
      <summary>
            Creates a connection pool.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="endPoint">The end point.</param>
      <returns>A connection pool.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.BuildInfoResult">
      <summary>
            Represents the result of a buildInfo command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.BuildInfoResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.BuildInfoResult" /> class.
            </summary>
      <param name="wrapped">The wrapped result document.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.BuildInfoResult.Equals(MongoDB.Driver.Core.Connections.BuildInfoResult)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.BuildInfoResult.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.BuildInfoResult.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.BuildInfoResult.ServerVersion">
      <summary>
            Gets the server version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.BuildInfoResult.Wrapped">
      <summary>
            Gets the wrapped result document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.ConnectionDescription">
      <summary>
            Represents information describing a connection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Connections.IsMasterResult,MongoDB.Driver.Core.Connections.BuildInfoResult)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.ConnectionDescription" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="isMasterResult">The issMaster result.</param>
      <param name="buildInfoResult">The buildInfo result.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.BuildInfoResult">
      <summary>
            Gets the buildInfo result.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.Equals(MongoDB.Driver.Core.Connections.ConnectionDescription)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.IsMasterResult">
      <summary>
            Gets the isMaster result.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxBatchCount">
      <summary>
            Gets the maximum number of documents in a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxDocumentSize">
      <summary>
            Gets the maximum size of a document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxMessageSize">
      <summary>
            Gets the maximum size of a message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.MaxWireDocumentSize">
      <summary>
            Gets the maximum size of a wire document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionDescription.ServerVersion">
      <summary>
            Gets the server version.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionDescription.WithConnectionId(MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>
            Returns a new instance of ConnectionDescription with a different connection identifier.
            </summary>
      <param name="value">The value.</param>
      <returns>A connection description.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.ConnectionId">
      <summary>
            Represents a connection identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.ConnectionId" /> class.
            </summary>
      <param name="serverId">The server identifier.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.ConnectionId" /> class.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="localValue">The local value.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.Equals(MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.LocalValue">
      <summary>
            Gets the local value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.ConnectionId.ServerValue">
      <summary>
            Gets the server value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.StructurallyEquals(MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>
            Compares all fields of two ConnectionId instances (Equals ignores the ServerValue).
            </summary>
      <param name="other">The other ConnectionId.</param>
      <returns>True if both instances are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.ConnectionId.WithServerValue(System.Int32)">
      <summary>
            Returns a new instance of ConnectionId with a new server value.
            </summary>
      <param name="serverValue">The server value.</param>
      <returns>A ConnectionId.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.IConnection">
      <summary>
            Represents a connection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IConnection.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IConnection.Description">
      <summary>
            Gets the connection description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IConnection.EndPoint">
      <summary>
            Gets the end point.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IConnection.IsExpired">
      <summary>
            Gets a value indicating whether this instance is expired.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnection.Open(System.Threading.CancellationToken)">
      <summary>
            Opens the connection.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>
            Opens the connection.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnection.ReceiveMessage(System.Int32,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Receives a message.
            </summary>
      <param name="responseTo">The id of the sent message for which a response is to be received.</param>
      <param name="encoderSelector">The encoder selector.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            The response message.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnection.ReceiveMessageAsync(System.Int32,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Receives a message.
            </summary>
      <param name="responseTo">The id of the sent message for which a response is to be received.</param>
      <param name="encoderSelector">The encoder selector.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>
            A Task whose result is the response message.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnection.SendMessages(System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Sends the messages.
            </summary>
      <param name="messages">The messages.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnection.SendMessagesAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Threading.CancellationToken)">
      <summary>
            Sends the messages.
            </summary>
      <param name="messages">The messages.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IConnection.Settings">
      <summary>
            Gets the connection settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.IConnectionFactory">
      <summary>
            Represents a connection factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnectionFactory.CreateConnection(MongoDB.Driver.Core.Servers.ServerId,System.Net.EndPoint)">
      <summary>
            Creates the connection.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="endPoint">The end point.</param>
      <returns>A connection.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.IConnectionHandle">
      <summary>
            Represents a handle to a connection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IConnectionHandle.Fork">
      <summary>
            A new handle to the underlying connection.
            </summary>
      <returns>A connection handle.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.IsMasterResult">
      <summary>
            Represents the result of an isMaster command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IsMasterResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Connections.IsMasterResult" /> class.
            </summary>
      <param name="wrapped">The wrapped result document.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.ElectionId">
      <summary>
            Gets the election identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IsMasterResult.Equals(MongoDB.Driver.Core.Connections.IsMasterResult)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IsMasterResult.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IsMasterResult.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IsMasterResult.GetReplicaSetConfig">
      <summary>
            Gets the replica set configuration.
            </summary>
      <returns>The replica set configuration.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.IsArbiter">
      <summary>
            Gets a value indicating whether this instance is an arbiter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.IsReplicaSetMember">
      <summary>
            Gets a value indicating whether this instance is a replica set member.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.MaxBatchCount">
      <summary>
            Gets the maximum number of documents in a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.MaxDocumentSize">
      <summary>
            Gets the maximum size of a document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.MaxMessageSize">
      <summary>
            Gets the maximum size of a message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.MaxWireVersion">
      <summary>
            Gets the maximum wire version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.Me">
      <summary>
            Gets the endpoint the server is claiming it is known as.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.MinWireVersion">
      <summary>
            Gets the minimum wire version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.ServerType">
      <summary>
            Gets the type of the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.Tags">
      <summary>
            Gets the replica set tags.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Connections.IsMasterResult.Wrapped">
      <summary>
            Gets the wrapped result document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Connections.IStreamFactory">
      <summary>
            Represents a stream factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IStreamFactory.CreateStream(System.Net.EndPoint,System.Threading.CancellationToken)">
      <summary>
            Creates a stream.
            </summary>
      <param name="endPoint">The end point.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Connections.IStreamFactory.CreateStreamAsync(System.Net.EndPoint,System.Threading.CancellationToken)">
      <summary>
            Creates a stream.
            </summary>
      <param name="endPoint">The end point.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the Stream.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterAddedServerEvent">
      <summary>
            Occurs after a server is added to the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterAddedServerEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="duration">The duration of time it took to add the server.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.Duration">
      <summary>
            Gets the duration of time it took to add a server,
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterAddedServerEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterAddingServerEvent">
      <summary>
            Occurs before a server is added to the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.Net.EndPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterAddingServerEvent" /> struct.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="endPoint">The end point.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterAddingServerEvent.EndPoint">
      <summary>
            Gets the end point.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterClosedEvent">
      <summary>
            Occurs after a cluster is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterClosedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterClosedEvent" /> struct.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="duration">The duration of time it took to close the cluster.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterClosedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterClosedEvent.Duration">
      <summary>
            Gets the duration of time it took to close the cluster.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterClosingEvent">
      <summary>
            Occurs before a cluster is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterClosingEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterClosingEvent" /> struct.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterClosingEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent">
      <summary>
            Occurs when a cluster has changed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ClusterDescription)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent" /> struct.
            </summary>
      <param name="oldDescription">The old description.</param>
      <param name="newDescription">The new description.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.NewDescription">
      <summary>
            Gets the new description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent.OldDescription">
      <summary>
            Gets the old description.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterOpenedEvent">
      <summary>
            Occurs after a cluster is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterOpenedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core.Configuration.ClusterSettings,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterOpenedEvent" /> struct.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="clusterSettings">The cluster settings.</param>
      <param name="duration">The duration of time it took to open the cluster.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.ClusterSettings">
      <summary>
            Gets the cluster settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterOpenedEvent.Duration">
      <summary>
            Gets the duration of time it took to open the cluster.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterOpeningEvent">
      <summary>
            Occurs before a cluster is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterOpeningEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core.Configuration.ClusterSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterOpeningEvent" /> struct.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="clusterSettings">The cluster settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterOpeningEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterOpeningEvent.ClusterSettings">
      <summary>
            Gets the cluster settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent">
      <summary>
            Occurs after a server has been removed from the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.String,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="reason">The reason.</param>
      <param name="duration">The duration of time it took to remove the server.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.Duration">
      <summary>
            Gets the duration of time it took to remove the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.Reason">
      <summary>
            Gets the reason the server was removed.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovedServerEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent">
      <summary>
            Occurs before a server is removed from the cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="reason">The reason the server is being removed.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.Reason">
      <summary>
            Gets the reason the server is being removed.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterRemovingServerEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent">
      <summary>
            Occurs after a server is selected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,MongoDB.Driver.Core.Servers.ServerDescription,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent" /> struct.
            </summary>
      <param name="clusterDescription">The cluster description.</param>
      <param name="serverSelector">The server selector.</param>
      <param name="selectedServer">The selected server.</param>
      <param name="duration">The duration of time it took to select the server.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.ClusterDescription">
      <summary>
            Gets the cluster description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.Duration">
      <summary>
            Gets the duration of time it took to select the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.SelectedServer">
      <summary>
            Gets the selected server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectedServerEvent.ServerSelector">
      <summary>
            Gets the server selector.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent">
      <summary>
            Occurs before a server is selected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent" /> struct.
            </summary>
      <param name="clusterDescription">The cluster description.</param>
      <param name="serverSelector">The server selector.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.ClusterDescription">
      <summary>
            Gets the cluster description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerEvent.ServerSelector">
      <summary>
            Gets the server selector.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent">
      <summary>
            Occurs when selecting a server fails.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.#ctor(MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,System.Exception,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent" /> struct.
            </summary>
      <param name="clusterDescription">The cluster description.</param>
      <param name="serverSelector">The server selector.</param>
      <param name="exception">The exception.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.ClusterDescription">
      <summary>
            Gets the cluster description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent.ServerSelector">
      <summary>
            Gets the server selector.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.CommandFailedEvent">
      <summary>
            Occurs when a command has failed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.CommandFailedEvent.#ctor(System.String,System.Exception,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandFailedEvent" /> struct.
            </summary>
      <param name="commandName">Name of the command.</param>
      <param name="exception">The exception.</param>
      <param name="operationId">The operation identifier.</param>
      <param name="requestId">The request identifier.</param>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.CommandName">
      <summary>
            Gets the name of the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.Duration">
      <summary>
            Gets the duration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.Failure">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandFailedEvent.RequestId">
      <summary>
            Gets the request identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.CommandStartedEvent">
      <summary>
            Occurs when a command has started.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.CommandStartedEvent.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Driver.DatabaseNamespace,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandStartedEvent" /> class.
            </summary>
      <param name="commandName">Name of the command.</param>
      <param name="command">The command.</param>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="operationId">The operation identifier.</param>
      <param name="requestId">The request identifier.</param>
      <param name="connectionId">The connection identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.Command">
      <summary>
            Gets the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.CommandName">
      <summary>
            Gets the name of the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandStartedEvent.RequestId">
      <summary>
            Gets the request identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.CommandSucceededEvent">
      <summary>
            Occurs when a command has succeeded.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.CommandSucceededEvent.#ctor(System.String,MongoDB.Bson.BsonDocument,System.Nullable{System.Int64},System.Int32,MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.CommandSucceededEvent" /> struct.
            </summary>
      <param name="commandName">Name of the command.</param>
      <param name="reply">The reply.</param>
      <param name="operationId">The operation identifier.</param>
      <param name="requestId">The request identifier.</param>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.CommandName">
      <summary>
            Gets the name of the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.Duration">
      <summary>
            Gets the duration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.Reply">
      <summary>
            Gets the reply.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.CommandSucceededEvent.RequestId">
      <summary>
            Gets the request identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionClosedEvent">
      <summary>
            Occurs after a connection is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionClosedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionClosedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration of time it took to close the connection.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.Duration">
      <summary>
            Gets the duration of time it took to close the connection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionClosingEvent">
      <summary>
            Occurs before a connection is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionClosingEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionClosingEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionClosingEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionFailedEvent">
      <summary>
            Occurs when a connection fails.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionFailedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="exception">The exception.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionFailedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionOpenedEvent">
      <summary>
            Occurs after a connection is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionOpenedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="connectionSettings">The connection settings.</param>
      <param name="duration">The duration of time it took to open the connection.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ConnectionSettings">
      <summary>
            Gets the connection settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.Duration">
      <summary>
            Gets the duration of time it took to open the connection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpenedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionOpeningEvent">
      <summary>
            Occurs before a connection is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionOpeningEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="connectionSettings">The connection settings.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ConnectionSettings">
      <summary>
            Gets the connection settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent">
      <summary>
            Occurs when a connection fails to open.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Configuration.ConnectionSettings,System.Exception,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="connectionSettings">The connection settings.</param>
      <param name="exception">The exception.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ConnectionSettings">
      <summary>
            Gets the connection settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent">
      <summary>
            Occurs after a connection is added to the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration of time it took to add the connection to the pool.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.Duration">
      <summary>
            Gets the duration of time it took to add the server to the pool.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent">
      <summary>
            Occurs before a connection is added to the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent">
      <summary>
            Occurs after a connection is checked in to the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration of time it took to check in the connection.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.Duration">
      <summary>
            Gets the duration of time it took to check in the connection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent">
      <summary>
            Occurs after a connection is checked out of the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration of time it took to check out the connection.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.Duration">
      <summary>
            Gets the duration of time it took to check out the connection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent">
      <summary>
            Occurs before a connection is checked in to the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent">
      <summary>
            Occurs before a connection is checking out of the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent">
      <summary>
            Occurs when a connection could not be checked out of the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Exception,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="exception">The exception.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent">
      <summary>
            Occurs after the pool is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent">
      <summary>
            Occurs before the pool is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent">
      <summary>
            Occurs after the pool is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="connectionPoolSettings">The connection pool settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.ConnectionPoolSettings">
      <summary>
            Gets the connection pool settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent">
      <summary>
            Occurs before the pool is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ConnectionPoolSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="connectionPoolSettings">The connection pool settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.ConnectionPoolSettings">
      <summary>
            Gets the connection pool settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent">
      <summary>
            Occurs after a connection is removed from the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration of time it took to remove the connection from the pool.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.Duration">
      <summary>
            Gets the duration of time it took to remove the connection from the pool.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent">
      <summary>
            Occurs before a connection is removed from the pool.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent">
      <summary>
            Occurs after a message is received.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="responseTo">The id of the message we received a response to.</param>
      <param name="length">The length of the received message.</param>
      <param name="networkDuration">The duration of network time it took to receive the message.</param>
      <param name="deserializationDuration">The duration of deserialization time it took to receive the message.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.DeserializationDuration">
      <summary>
            Gets the duration of deserialization time it took to receive the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.Duration">
      <summary>
            Gets the duration of time it took to receive the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.Length">
      <summary>
            Gets the length of the received message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.NetworkDuration">
      <summary>
            Gets the duration of network time it took to receive the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ResponseTo">
      <summary>
            Gets the id of the message we received a response to.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent">
      <summary>
            Occurs before a message is received.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int32,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="responseTo">The id of the message we are receiving a response to.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ResponseTo">
      <summary>
            Gets the id of the message we are receiving a response to.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent">
      <summary>
            Occurs when a message was unable to be received.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Int32,System.Exception,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="responseTo">The id of the message we were receiving a response to.</param>
      <param name="exception">The exception.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ResponseTo">
      <summary>
            Gets id of the message we were receiving a response to.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent">
      <summary>
            Occurs before a message is sent.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IReadOnlyList{System.Int32},System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="requestIds">The request ids.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.RequestIds">
      <summary>
            Gets the request ids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent">
      <summary>
            Occurs when a message could not be sent.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IReadOnlyList{System.Int32},System.Exception,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="requestIds">The request ids.</param>
      <param name="exception">The exception.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.RequestIds">
      <summary>
            Gets the request ids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent">
      <summary>
            Occurs after a message has been sent.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IReadOnlyList{System.Int32},System.Int32,System.TimeSpan,System.TimeSpan,System.Nullable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="requestIds">The request ids.</param>
      <param name="length">The length.</param>
      <param name="networkDuration">The duration of time spent on the network.</param>
      <param name="serializationDuration">The duration of time spent serializing the messages.</param>
      <param name="operationId">The operation identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.Duration">
      <summary>
            Gets the duration of time it took to send the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.Length">
      <summary>
            Gets the combined length of the messages.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.NetworkDuration">
      <summary>
            Gets the duration of time spent on the network.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.OperationId">
      <summary>
            Gets the operation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.RequestIds">
      <summary>
            Gets the request ids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.SerializationDuration">
      <summary>
            Gets the duration of time spent serializing the messages.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.IEventSubscriber">
      <summary>
            A subscriber to events.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.IEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
      <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>
        <c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ReflectionEventSubscriber">
      <summary>
            Subscribes methods with a single argument to events 
            of that single argument's type.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ReflectionEventSubscriber.#ctor(System.Object,System.String,System.Reflection.BindingFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ReflectionEventSubscriber" /> class.
            </summary>
      <param name="instance">The instance.</param>
      <param name="methodName">Name of the method to match against.</param>
      <param name="bindingFlags">The binding flags.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ReflectionEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
      <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>
        <c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerClosedEvent">
      <summary>
            Occurs after a server is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerClosedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerClosedEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="duration">The duration of time it took to close the server.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.Duration">
      <summary>
            Gets the duration of time it took to close the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerClosedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerClosingEvent">
      <summary>
            Occurs before a server is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerClosingEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerClosingEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerClosingEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerClosingEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent">
      <summary>
            Occurs after a server's description has changed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerDescription,MongoDB.Driver.Core.Servers.ServerDescription)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent" /> struct.
            </summary>
      <param name="oldDescription">The old description.</param>
      <param name="newDescription">The new description.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.NewDescription">
      <summary>
            Gets the new description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.OldDescription">
      <summary>
            Gets the old description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent">
      <summary>
            Occurs when a heartbeat failed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="exception">The exception.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.Exception">
      <summary>
            Gets the exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent">
      <summary>
            Occurs when a heartbeat succeeded.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent">
      <summary>
            Occurs before heartbeat is issued.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent" /> struct.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="duration">The duration of time it took to complete the heartbeat.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.ConnectionId">
      <summary>
            Gets the connection identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.Duration">
      <summary>
            Gets the duration of time it took to complete the heartbeat.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerOpenedEvent">
      <summary>
            Occurs after a server is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerOpenedEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ServerSettings,System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerOpenedEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="serverSettings">The server settings.</param>
      <param name="duration">The duration of time it took to open the server.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.Duration">
      <summary>
            Gets the duration of time it took to open the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpenedEvent.ServerSettings">
      <summary>
            Gets the server settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.ServerOpeningEvent">
      <summary>
            Occurs before a server is opened.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.ServerOpeningEvent.#ctor(MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core.Configuration.ServerSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.ServerOpeningEvent" /> struct.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="serverSettings">The server settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Events.ServerOpeningEvent.ServerSettings">
      <summary>
            Gets the server settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.SingleEventSubscriber`1">
      <summary>
            Subscriber for a single type of event.
            </summary>
      <typeparam name="TSingleEvent">The type of the single event.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.SingleEventSubscriber`1.#ctor(System.Action{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.SingleEventSubscriber`1" /> class.
            </summary>
      <param name="handler">The handler.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.SingleEventSubscriber`1.TryGetEventHandler``1(System.Action{``0}@)">
      <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>
        <c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.Diagnostics.PerformanceCounterEventSubscriber">
      <summary>
            Represents an event subscriber that records certain events to Windows performance counters.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.PerformanceCounterEventSubscriber.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.Diagnostics.PerformanceCounterEventSubscriber" /> class.
            </summary>
      <param name="applicationName">The name of the application.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.PerformanceCounterEventSubscriber.InstallPerformanceCounters">
      <summary>
            Installs the performance counters.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.PerformanceCounterEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
      <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>
        <c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber">
      <summary>
            An event subscriber that writes command events to a trace source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber.#ctor(System.Diagnostics.TraceSource)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber" /> class.
            </summary>
      <param name="traceSource">The trace source.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
      <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>
        <c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber">
      <summary>
            An event subscriber that writes to a trace source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber.#ctor(System.Diagnostics.TraceSource)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber" /> class.
            </summary>
      <param name="traceSource">The trace source.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber.TryGetEventHandler``1(System.Action{``0}@)">
      <summary>
            Tries to get an event handler for an event of type <typeparamref name="TEvent" />.
            </summary>
      <param name="handler">The handler.</param>
      <typeparam name="TEvent">The type of the event.</typeparam>
      <returns>
        <c>true</c> if this subscriber has provided an event handler; otherwise <c>false</c>.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.BatchableSource`1">
      <summary>
            Represents a source of items that can be broken into batches.
            </summary>
      <typeparam name="T">The type of the items.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.BatchableSource`1" /> class.
            </summary>
      <param name="batch">The single batch.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.BatchableSource`1" /> class.
            </summary>
      <param name="enumerator">The enumerator that will provide the items for the batch.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.Batch">
      <summary>
            Gets the most recent batch.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.ClearBatch">
      <summary>
            Clears the most recent batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.Current">
      <summary>
            Gets the current item.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.EndBatch(System.Collections.Generic.IReadOnlyList{`0})">
      <summary>
            Called when the last batch is complete.
            </summary>
      <param name="batch">The batch.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.EndBatch(System.Collections.Generic.IReadOnlyList{`0},MongoDB.Driver.Core.Misc.BatchableSource{`0}.Overflow)">
      <summary>
            Called when an intermediate batch is complete.
            </summary>
      <param name="batch">The batch.</param>
      <param name="overflow">The overflow item.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.GetRemainingItems">
      <summary>
            Gets all the remaining items that haven't been previously consumed.
            </summary>
      <returns>The remaining items.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.BatchableSource`1.HasMore">
      <summary>
            Gets a value indicating whether there are more items.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.MoveNext">
      <summary>
            Moves to the next item in the source.
            </summary>
      <returns>True if there are more items.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.StartBatch">
      <summary>
            Starts a new batch.
            </summary>
      <returns>The overflow item of the previous batch if there is one; otherwise, null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.BatchableSource`1.Overflow">
      <summary>
            Represents an overflow item that did not fit in the most recent batch and will be become the first item in the next batch.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.BatchableSource`1.Overflow.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Core.Misc.BatchableSource`1.Overflow</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Misc.BatchableSource`1.Overflow.Item">
      <summary>
            The item.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Misc.BatchableSource`1.Overflow.State">
      <summary>
            The state information, if any, that the consumer wishes to associate with the overflow item.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.EndPointHelper">
      <summary>
            Represents helper methods for EndPoints.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.Contains(System.Collections.Generic.IEnumerable{System.Net.EndPoint},System.Net.EndPoint)">
      <summary>
            Determines whether a list of end points contains a specific end point.
            </summary>
      <param name="endPoints">The list of end points.</param>
      <param name="endPoint">The specific end point to search for.</param>
      <returns>True if the list of end points contains the specific end point.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.EndPointHelper.EndPointEqualityComparer">
      <summary>
            Gets an end point equality comparer.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.Equals(System.Net.EndPoint,System.Net.EndPoint)">
      <summary>
            Compares two end points.
            </summary>
      <param name="a">The first end point.</param>
      <param name="b">The second end point.</param>
      <returns>True if both end points are equal, or if both are null.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.FromObjectData(System.Collections.Generic.List{System.Object})">
      <summary>
            Creates an end point from object data saved during serialization.
            </summary>
      <param name="info">The object data.</param>
      <returns>An end point.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.GetObjectData(System.Net.EndPoint)">
      <summary>
            Gets the object data required to serialize an end point.
            </summary>
      <param name="value">The end point.</param>
      <returns>The object data.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.Parse(System.String)">
      <summary>
            Parses the string representation of an end point.
            </summary>
      <param name="value">The value to parse.</param>
      <returns>An end point.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.SequenceEquals(System.Collections.Generic.IEnumerable{System.Net.EndPoint},System.Collections.Generic.IEnumerable{System.Net.EndPoint})">
      <summary>
            Compares two sequences of end points.
            </summary>
      <param name="a">The first sequence of end points.</param>
      <param name="b">The second sequence of end points.</param>
      <returns>True if both sequences contain the same end points in the same order, or if both sequences are null.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.ToString(System.Net.EndPoint)">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the end point.
            </summary>
      <param name="endPoint">The end point.</param>
      <returns>
            A <see cref="T:System.String" /> that represents the end point.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.EndPointHelper.TryParse(System.String,System.Net.EndPoint@)">
      <summary>
            Tries to parse the string representation of an end point.
            </summary>
      <param name="value">The value to parse.</param>
      <param name="result">The result.</param>
      <returns>True if the string representation was parsed successfully.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.Ensure">
      <summary>
            Represents methods that can be used to ensure that parameter values meet expected conditions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsBetween``1(``0,``0,``0,System.String)">
      <summary>
            Ensures that the value of a parameter is between a minimum and a maximum value.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="min">The minimum value.</param>
      <param name="max">The maximum value.</param>
      <param name="paramName">The name of the parameter.</param>
      <typeparam name="T">Type type of the value.</typeparam>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsEqualTo``1(``0,``0,System.String)">
      <summary>
            Ensures that the value of a parameter is equal to a comparand.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="comparand">The comparand.</param>
      <param name="paramName">The name of the parameter.</param>
      <typeparam name="T">Type type of the value.</typeparam>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualTo``1(``0,``0,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than or equal to a comparand.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="comparand">The comparand.</param>
      <param name="paramName">The name of the parameter.</param>
      <typeparam name="T">Type type of the value.</typeparam>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualToZero(System.Int32,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualToZero(System.Int64,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanOrEqualToZero(System.TimeSpan,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.Int32,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.Int64,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsGreaterThanZero(System.TimeSpan,System.String)">
      <summary>
            Ensures that the value of a parameter is greater than zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsInfiniteOrGreaterThanOrEqualToZero(System.TimeSpan,System.String)">
      <summary>
            Ensures that the value of a parameter is infinite or greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNotNull``1(``0,System.String)">
      <summary>
            Ensures that the value of a parameter is not null.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <typeparam name="T">Type type of the value.</typeparam>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNotNullOrEmpty(System.String,System.String)">
      <summary>
            Ensures that the value of a parameter is not null or empty.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNull``1(``0,System.String)">
      <summary>
            Ensures that the value of a parameter is null.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <typeparam name="T">Type type of the value.</typeparam>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanOrEqualToZero(System.Nullable{System.Int32},System.String)">
      <summary>
            Ensures that the value of a parameter is null or greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanOrEqualToZero(System.Nullable{System.Int64},System.String)">
      <summary>
            Ensures that the value of a parameter is null or greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanZero(System.Nullable{System.Int32},System.String)">
      <summary>
            Ensures that the value of a parameter is null or greater than zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanZero(System.Nullable{System.Int64},System.String)">
      <summary>
            Ensures that the value of a parameter is null or greater than zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrGreaterThanZero(System.Nullable{System.TimeSpan},System.String)">
      <summary>
            Ensures that the value of a parameter is null or greater than zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrInfiniteOrGreaterThanOrEqualToZero(System.Nullable{System.TimeSpan},System.String)">
      <summary>
            Ensures that the value of a parameter is null, or infinite, or greater than or equal to zero.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrNotEmpty(System.String,System.String)">
      <summary>
            Ensures that the value of a parameter is null or not empty.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsNullOrValidTimeout(System.Nullable{System.TimeSpan},System.String)">
      <summary>
            Ensures that the value of a parameter is null or a valid timeout.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.IsValidTimeout(System.TimeSpan,System.String)">
      <summary>
            Ensures that the value of a parameter is a valid timeout.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="paramName">The name of the parameter.</param>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.That(System.Boolean,System.String)">
      <summary>
            Ensures that an assertion is true.
            </summary>
      <param name="assertion">The assertion.</param>
      <param name="message">The message to use with the exception that is thrown if the assertion is false.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Ensure.That``1(``0,System.Func{``0,System.Boolean},System.String,System.String)">
      <summary>
            Ensures that the value of a parameter meets an assertion.
            </summary>
      <param name="value">The value of the parameter.</param>
      <param name="assertion">The assertion.</param>
      <param name="paramName">The name of the parameter.</param>
      <param name="message">The message to use with the exception that is thrown if the assertion is false.</param>
      <typeparam name="T">Type type of the value.</typeparam>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.Range`1">
      <summary>
            Represents a range between a minimum and a maximum value.
            </summary>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Range`1.#ctor(`0,`0)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.Range`1" /> class.
            </summary>
      <param name="min">The minimum value.</param>
      <param name="max">The maximum value.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Range`1.Equals(MongoDB.Driver.Core.Misc.Range{`0})">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Range`1.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Range`1.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.Range`1.Max">
      <summary>
            Gets the maximum value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.Range`1.Min">
      <summary>
            Gets the minimum value.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Range`1.Overlaps(MongoDB.Driver.Core.Misc.Range{`0})">
      <summary>
            Determines whether this range overlaps with another range.
            </summary>
      <param name="other">The other range.</param>
      <returns>True if this range overlaps with the other </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.Range`1.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.SemanticVersion">
      <summary>
            Represents a semantic version number.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SemanticVersion" /> class.
            </summary>
      <param name="major">The major version.</param>
      <param name="minor">The minor version.</param>
      <param name="patch">The patch version.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SemanticVersion" /> class.
            </summary>
      <param name="major">The major version.</param>
      <param name="minor">The minor version.</param>
      <param name="patch">The patch version.</param>
      <param name="preRelease">The pre release version.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.CompareTo(MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. </summary>
      <param name="other">An object to compare with this instance. </param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order.  Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order. </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.Equals(MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.Major">
      <summary>
            Gets the major version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.Minor">
      <summary>
            Gets the minor version.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_Equality(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Determines whether two specified semantic versions have the same value.
            </summary>
      <param name="a">The first semantic version to compare, or null.</param>
      <param name="b">The second semantic version to compare, or null.</param>
      <returns>
            True if the value of a is the same as the value of b; otherwise false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_GreaterThan(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Determines whether the first specified SemanticVersion is greater than the second specified SemanticVersion.
            </summary>
      <param name="a">The first semantic version to compare, or null.</param>
      <param name="b">The second semantic version to compare, or null.</param>
      <returns>
            True if the value of a is greater than b; otherwise false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_GreaterThanOrEqual(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Determines whether the first specified SemanticVersion is greater than or equal to the second specified SemanticVersion.
            </summary>
      <param name="a">The first semantic version to compare, or null.</param>
      <param name="b">The second semantic version to compare, or null.</param>
      <returns>
            True if the value of a is greater than or equal to b; otherwise false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_Inequality(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Determines whether two specified semantic versions have different values.
            </summary>
      <param name="a">The first semantic version to compare, or null.</param>
      <param name="b">The second semantic version to compare, or null.</param>
      <returns>
            True if the value of a is different from the value of b; otherwise false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_LessThan(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Determines whether the first specified SemanticVersion is less than the second specified SemanticVersion.
            </summary>
      <param name="a">The first semantic version to compare, or null.</param>
      <param name="b">The second semantic version to compare, or null.</param>
      <returns>
            True if the value of a is less than b; otherwise false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.op_LessThanOrEqual(MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Determines whether the first specified SemanticVersion is less than or equal to the second specified SemanticVersion.
            </summary>
      <param name="a">The first semantic version to compare, or null.</param>
      <param name="b">The second semantic version to compare, or null.</param>
      <returns>
            True if the value of a is less than or equal to b; otherwise false.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.Parse(System.String)">
      <summary>
            Parses a string representation of a semantic version.
            </summary>
      <param name="value">The string value to parse.</param>
      <returns>A semantic version.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.Patch">
      <summary>
            Gets the patch version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.SemanticVersion.PreRelease">
      <summary>
            Gets the pre release version.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemanticVersion.TryParse(System.String,MongoDB.Driver.Core.Misc.SemanticVersion@)">
      <summary>
            Tries to parse a string representation of a semantic version.
            </summary>
      <param name="value">The string value to parse.</param>
      <param name="result">The result.</param>
      <returns>True if the string representation was parsed successfully; otherwise false.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest">
      <summary>
            Represents a tentative request to acquire a SemaphoreSlim.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest.#ctor(System.Threading.SemaphoreSlim,System.Threading.CancellationToken)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest" /> class.
            </summary>
      <param name="semaphore">The semaphore.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Misc.SemaphoreSlimRequest.Task">
      <summary>
            Gets the semaphore wait task.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.AggregateExplainOperation">
      <summary>
            Represents an aggregate explain operations.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateExplainOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.AggregateExplainOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="pipeline">The pipeline.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateExplainOperation.AllowDiskUse">
      <summary>
            Gets or sets a value indicating whether the server is allowed to use the disk.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateExplainOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateExplainOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateExplainOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateExplainOperation.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateExplainOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateExplainOperation.Pipeline">
      <summary>
            Gets the pipeline.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.AggregateOperation`1">
      <summary>
            Represents an aggregate operation.
            </summary>
      <typeparam name="TResult">The type of the result values.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.AggregateOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="pipeline">The pipeline.</param>
      <param name="resultSerializer">The result value serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.AllowDiskUse">
      <summary>
            Gets or sets a value indicating whether the server is allowed to use the disk.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.Pipeline">
      <summary>
            Gets the pipeline.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.ResultSerializer">
      <summary>
            Gets the result value serializer.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateOperation`1.ToExplainOperation(MongoDB.Driver.Core.Operations.ExplainVerbosity)">
      <summary>
            Returns an AggregateExplainOperation for this AggregateOperation.
            </summary>
      <param name="verbosity">The verbosity.</param>
      <returns>An AggregateExplainOperation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateOperation`1.UseCursor">
      <summary>
            Gets or sets a value indicating whether the server should use a cursor to return the results.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation">
      <summary>
            Represents an aggregate operation that writes the results to an output collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="pipeline">The pipeline.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.AllowDiskUse">
      <summary>
            Gets or sets a value indicating whether the server is allowed to use the disk.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AggregateToCollectionOperation.Pipeline">
      <summary>
            Gets the pipeline.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.AsyncCursor`1">
      <summary>
            Represents an async cursor.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AsyncCursor`1.#ctor(MongoDB.Driver.Core.Bindings.IChannelSource,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,System.Collections.Generic.IReadOnlyList{`0},System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,System.Nullable{System.TimeSpan})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.AsyncCursor`1" /> class.
            </summary>
      <param name="channelSource">The channel source.</param>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="firstBatch">The first batch.</param>
      <param name="cursorId">The cursor identifier.</param>
      <param name="batchSize">The size of a batch.</param>
      <param name="limit">The limit.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
      <param name="maxTime">The maxTime for each batch.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.AsyncCursor`1.Current">
      <summary>
            Gets the current batch of documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AsyncCursor`1.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AsyncCursor`1.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AsyncCursor`1.MoveNext(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>Whether any more documents are available.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.AsyncCursor`1.MoveNextAsync(System.Threading.CancellationToken)">
      <summary>
            Moves to the next batch of documents.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result indicates whether any more documents are available.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation">
      <summary>
            Represents a mixed write bulk operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Operations.WriteRequest},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="requests">The requests.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.IsOrdered">
      <summary>
            Gets or sets a value indicating whether the writes must be performed in order.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.MaxBatchCount">
      <summary>
            Gets or sets the maximum number of documents in a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.MaxBatchLength">
      <summary>
            Gets or sets the maximum length of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.MaxDocumentSize">
      <summary>
            Gets or sets the maximum size of a document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.MaxWireDocumentSize">
      <summary>
            Gets or sets the maximum size of a wire document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.Requests">
      <summary>
            Gets the requests.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkMixedWriteOperation.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkWriteConcernError">
      <summary>
            Represents the details of a write concern error.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkWriteConcernError.#ctor(System.Int32,System.String,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.BulkWriteConcernError" /> class.
            </summary>
      <param name="code">The code.</param>
      <param name="message">The message.</param>
      <param name="details">The details.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteConcernError.Code">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteConcernError.Details">
      <summary>
            Gets the error details.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteConcernError.Message">
      <summary>
            Gets the error message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkWriteOperationError">
      <summary>
            Represents the details of a write error for a particular request.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkWriteOperationError.#ctor(System.Int32,System.Int32,System.String,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.BulkWriteOperationError" /> class.
            </summary>
      <param name="index">The index.</param>
      <param name="code">The code.</param>
      <param name="message">The message.</param>
      <param name="details">The details.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationError.Category">
      <summary>
            Gets the error category.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationError.Code">
      <summary>
            Gets the error code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationError.Details">
      <summary>
            Gets the error details.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationError.Index">
      <summary>
            Gets the index of the request that had an error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationError.Message">
      <summary>
            Gets the error message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkWriteOperationResult">
      <summary>
            Represents the result of a bulk write operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.WriteRequest})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.BulkWriteOperationResult" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
      <param name="processedRequests">The processed requests.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.DeletedCount">
      <summary>
            Gets the number of documents that were deleted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.InsertedCount">
      <summary>
            Gets the number of documents that were inserted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.IsAcknowledged">
      <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.MatchedCount">
      <summary>
            Gets the number of documents that were matched.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.ModifiedCount">
      <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.ProcessedRequests">
      <summary>
            Gets the processed requests.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.RequestCount">
      <summary>
            Gets the request count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Upserts">
      <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged">
      <summary>
            Represents the result of an acknowledged bulk write operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.#ctor(System.Int32,System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.WriteRequest},System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
      <param name="matchedCount">The matched count.</param>
      <param name="deletedCount">The deleted count.</param>
      <param name="insertedCount">The inserted count.</param>
      <param name="modifiedCount">The modified count.</param>
      <param name="processedRequests">The processed requests.</param>
      <param name="upserts">The upserts.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.DeletedCount">
      <summary>
            Gets the number of documents that were deleted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.InsertedCount">
      <summary>
            Gets the number of documents that were inserted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.MatchedCount">
      <summary>
            Gets the number of documents that were matched.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.ModifiedCount">
      <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged.Upserts">
      <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged">
      <summary>
            Represents the result of an unacknowledged BulkWrite operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.WriteRequest})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged" /> class.
            </summary>
      <param name="requestCount">The request count.</param>
      <param name="processedRequests">The processed requests.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.DeletedCount">
      <summary>
            Gets the number of documents that were deleted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.InsertedCount">
      <summary>
            Gets the number of documents that were inserted.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.IsAcknowledged">
      <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.IsModifiedCountAvailable">
      <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.MatchedCount">
      <summary>
            Gets the number of documents that were matched.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.ModifiedCount">
      <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged.Upserts">
      <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert">
      <summary>
            Represents the information about one Upsert.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert.Id">
      <summary>
            Gets the identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert.Index">
      <summary>
            Gets the index.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CommandOperationBase`1">
      <summary>
            Represents the base class for a command operation.
            </summary>
      <typeparam name="TCommandResult">The type of the command result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CommandOperationBase`1.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CommandOperationBase`1" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="command">The command.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.AdditionalOptions">
      <summary>
            Gets or sets the additional options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.Command">
      <summary>
            Gets the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.CommandValidator">
      <summary>
            Gets or sets the command validator.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.Comment">
      <summary>
            Gets or sets the comment.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CommandOperationBase`1.ExecuteProtocol(MongoDB.Driver.Core.Bindings.IChannelSource,MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
      <summary>
            Executes the protocol.
            </summary>
      <param name="channelSource">The channel source.</param>
      <param name="readPreference">The read preference.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the command result.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CommandOperationBase`1.ExecuteProtocolAsync(MongoDB.Driver.Core.Bindings.IChannelSource,MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
      <summary>
            Executes the protocol.
            </summary>
      <param name="channelSource">The channel source.</param>
      <param name="readPreference">The read preference.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the command result.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CommandOperationBase`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CountOperation">
      <summary>
            Represents a count operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CountOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CountOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CountOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CountOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.Hint">
      <summary>
            Gets or sets the index hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.Limit">
      <summary>
            Gets or sets a limit on the number of matching documents to count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CountOperation.Skip">
      <summary>
            Gets or sets the number of documents to skip before counting the remaining matching documents.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CreateCollectionOperation">
      <summary>
            Represents a create collection operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateCollectionOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CreateCollectionOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.AutoIndexId">
      <summary>
            Gets or sets a value indicating whether an index on _id should be created automatically.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.Capped">
      <summary>
            Gets or sets a value indicating whether the collection is a capped collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateCollectionOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateCollectionOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.IndexOptionDefaults">
      <summary>
            Gets or sets the index option defaults.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.MaxDocuments">
      <summary>
            Gets or sets the maximum number of documents in a capped collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.MaxSize">
      <summary>
            Gets or sets the maximum size of a capped collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.StorageEngine">
      <summary>
            Gets or sets the storage engine options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.UsePowerOf2Sizes">
      <summary>
            Gets or sets a value indicating whether the collection should use power of 2 sizes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.ValidationAction">
      <summary>
            Gets or sets the validation action.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.ValidationLevel">
      <summary>
            Gets or sets the validation level.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateCollectionOperation.Validator">
      <summary>
            Gets or sets the validator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CreateIndexesOperation">
      <summary>
            Represents a create indexes operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Operations.CreateIndexRequest},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CreateIndexesOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="requests">The requests.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesOperation.Requests">
      <summary>
            Gets the create index requests.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesOperation.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation">
      <summary>
            Represents a create indexes operation that uses the createIndexes command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Operations.CreateIndexRequest},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CreateIndexesOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="requests">The requests.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.Requests">
      <summary>
            Gets the create index requests.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingCommandOperation.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation">
      <summary>
            Represents a create indexes operation that inserts into the system.indexes collection (used with older server versions).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IEnumerable{MongoDB.Driver.Core.Operations.CreateIndexRequest},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CreateIndexesOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="requests">The requests.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.Requests">
      <summary>
            Gets the create index requests.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexesUsingInsertOperation.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CreateIndexRequest">
      <summary>
            Represents a create index request.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexRequest.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.CreateIndexRequest" /> class.
            </summary>
      <param name="keys">The keys.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.AdditionalOptions">
      <summary>
            Gets or sets the additional options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Background">
      <summary>
            Gets or sets a value indicating whether the index should be created in the background.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Bits">
      <summary>
            Gets or sets the bits of precision of the geohash values for 2d geo indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.BucketSize">
      <summary>
            Gets or sets the size of the bucket for geo haystack indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.DefaultLanguage">
      <summary>
            Gets or sets the default language for text indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.ExpireAfter">
      <summary>
            Gets or sets when documents in a TTL collection expire.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.CreateIndexRequest.GetIndexName">
      <summary>
            Gets the name of the index.
            </summary>
      <returns>The name of the index.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Keys">
      <summary>
            Gets the keys.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.LanguageOverride">
      <summary>
            Gets or sets the language override for text indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Max">
      <summary>
            Gets or sets the maximum coordinate value for 2d indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Min">
      <summary>
            Gets or sets the minimum coordinate value for 2d indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Name">
      <summary>
            Gets or sets the index name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.PartialFilterExpression">
      <summary>
            Gets or sets the partial filter expression.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Sparse">
      <summary>
            Gets or sets a value indicating whether the index is a sparse index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.SphereIndexVersion">
      <summary>
            Gets or sets the 2dsphere index version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.StorageEngine">
      <summary>
            Gets or sets the storage engine options.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.TextIndexVersion">
      <summary>
            Gets or sets the text index version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Unique">
      <summary>
            Gets or sets a value indicating whether the index enforces the uniqueness of the key values.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Version">
      <summary>
            Gets or sets the index version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.CreateIndexRequest.Weights">
      <summary>
            Gets or sets the weights for text indexes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.CursorType">
      <summary>
            The cursor type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.CursorType.NonTailable">
      <summary>
            A non-tailable cursor. This is sufficient for most uses.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.CursorType.Tailable">
      <summary>
            A tailable cursor.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.CursorType.TailableAwait">
      <summary>
            A tailable cursor with a built-in server sleep.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DatabaseExistsOperation">
      <summary>
            Represents a database exists operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DatabaseExistsOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DatabaseExistsOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DatabaseExistsOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DatabaseExistsOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DatabaseExistsOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DatabaseExistsOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation">
      <summary>
            Represents a delete operation using the delete opcode.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.Operations.DeleteRequest,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="request">The request.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.Request">
      <summary>
            Gets the request.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DeleteOpcodeOperation.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DeleteRequest">
      <summary>
            Represents a request to delete one or more documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DeleteRequest.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DeleteRequest" /> class.
            </summary>
      <param name="filter">The filter.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DeleteRequest.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DeleteRequest.Limit">
      <summary>
            Gets or sets a limit on the number of documents that should be deleted.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DistinctOperation`1">
      <summary>
            Represents a distinct operation.
            </summary>
      <typeparam name="TValue">The type of the value.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DistinctOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.Serialization.IBsonSerializer{`0},System.String,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DistinctOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="valueSerializer">The value serializer.</param>
      <param name="fieldName">The name of the field.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DistinctOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DistinctOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.FieldName">
      <summary>
            Gets the name of the field.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DistinctOperation`1.ValueSerializer">
      <summary>
            Gets the value serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DropCollectionOperation">
      <summary>
            Represents a drop collection operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropCollectionOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DropCollectionOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropCollectionOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropCollectionOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropCollectionOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropCollectionOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DropDatabaseOperation">
      <summary>
            Represents a drop database operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropDatabaseOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DropDatabaseOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropDatabaseOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropDatabaseOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropDatabaseOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropDatabaseOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.DropIndexOperation">
      <summary>
            Represents a drop index operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropIndexOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DropIndexOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="keys">The keys.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropIndexOperation.#ctor(MongoDB.Driver.CollectionNamespace,System.String,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.DropIndexOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="indexName">The name of the index.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropIndexOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropIndexOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.DropIndexOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropIndexOperation.IndexName">
      <summary>
            Gets the name of the index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.DropIndexOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.EvalOperation">
      <summary>
            Represents an eval operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.EvalOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.EvalOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="function">The JavaScript function.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.EvalOperation.Args">
      <summary>
            Gets or sets the arguments to the JavaScript function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.EvalOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.EvalOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.EvalOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.EvalOperation.Function">
      <summary>
            Gets the JavaScript function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.EvalOperation.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.EvalOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.EvalOperation.NoLock">
      <summary>
            Gets or sets a value indicating whether the server should not take a global write lock before evaluating the JavaScript function.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ExplainOperation">
      <summary>
            Represents an explain operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ExplainOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonDocument,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ExplainOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="command">The command.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ExplainOperation.Command">
      <summary>
            Gets the command to be explained.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ExplainOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ExplainOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ExplainOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ExplainOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ExplainOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ExplainOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ExplainOperation.Verbosity">
      <summary>
            Gets or sets the verbosity.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ExplainVerbosity">
      <summary>
            The verbosity of an explanation.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.ExplainVerbosity.QueryPlanner">
      <summary>
            Runs the query planner and chooses the winning plan, but does not actually execute it.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.ExplainVerbosity.ExecutionStats">
      <summary>
            Runs the query optimizer, and then runs the winning plan to completion. In addition to the
            planner information, this makes execution stats available.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.ExplainVerbosity.AllPlansExecution">
      <summary>
            Runs the query optimizer and chooses the winning plan, but then runs all generated plans
            to completion. This makes execution stats available for all of the query plans.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1">
      <summary>
            Represents a base class for find and modify operations.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.GetCommandValidator">
      <summary>
            Gets the command validator.
            </summary>
      <returns>An element name validator for the command.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1">
      <summary>
            Represents a deserializer for find and modify result values.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1" /> class.
            </summary>
      <param name="valueSerializer">The value serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>A deserialized value.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindCommandOperation`1">
      <summary>
            Represents a Find command operation.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindCommandOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindCommandOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.AllowPartialResults">
      <summary>
            Gets or sets a value indicating whether the server is allowed to return partial results if any shards are unavailable.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Comment">
      <summary>
            Gets or sets the comment.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.CursorType">
      <summary>
            Gets or sets the type of the cursor.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindCommandOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.FirstBatchSize">
      <summary>
            Gets or sets the size of the first batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Hint">
      <summary>
            Gets or sets the hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Max">
      <summary>
            Gets or sets the max key value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.MaxAwaitTime">
      <summary>
            Gets or sets the maximum await time for TailableAwait cursors.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.MaxScan">
      <summary>
            Gets or sets the max scan.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Min">
      <summary>
            Gets or sets the min key value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.NoCursorTimeout">
      <summary>
            Gets or sets a value indicating whether the server will not timeout the cursor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.OplogReplay">
      <summary>
            Gets or sets a value indicating whether the OplogReplay bit will be set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.ReturnKey">
      <summary>
            Gets or sets whether to only return the key values.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.ShowRecordId">
      <summary>
            Gets or sets whether the record Id should be added to the result document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.SingleBatch">
      <summary>
            Gets or sets whether to return only a single batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Skip">
      <summary>
            Gets or sets the number of documents skip.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Snapshot">
      <summary>
            Gets or sets whether to use snapshot behavior.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindCommandOperation`1.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1">
      <summary>
            Represents a find one and delete operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="filter">The filter.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1.GetCommandValidator">
      <summary>
            Gets the command validator.
            </summary>
      <returns>An element name validator for the command.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1">
      <summary>
            Represents a find one and replace operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="filter">The filter.</param>
      <param name="replacement">The replacement.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.GetCommandValidator">
      <summary>
            Gets the command validator.
            </summary>
      <returns>An element name validator for the command.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.IsUpsert">
      <summary>
            Gets a value indicating whether a document should be inserted if no matching document is found.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.Replacement">
      <summary>
            Gets the replacement document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.ReturnDocument">
      <summary>
            Gets or sets which version of the modified document to return.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1">
      <summary>
            Represents a find one and update operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.GetCommandValidator">
      <summary>
            Gets the command validator.
            </summary>
      <returns>An element name validator for the command.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.IsUpsert">
      <summary>
            Gets a value indicating whether a document should be inserted if no matching document is found.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.ReturnDocument">
      <summary>
            Gets or sets which version of the modified document to return.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1.Update">
      <summary>
            Gets or sets the update specification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1">
      <summary>
            Represents a Find opcode operation.
            </summary>
      <typeparam name="TDocument">The type of the returned documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.AllowPartialResults">
      <summary>
            Gets or sets a value indicating whether the server is allowed to return partial results if any shards are unavailable.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Comment">
      <summary>
            Gets or sets the comment.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.CursorType">
      <summary>
            Gets or sets the type of the cursor.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.FirstBatchSize">
      <summary>
            Gets or sets the size of the first batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Hint">
      <summary>
            Gets or sets the hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Max">
      <summary>
            Gets or sets the max key value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.MaxScan">
      <summary>
            Gets or sets the max scan.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Min">
      <summary>
            Gets or sets the min key value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Modifiers">
      <summary>
            Gets or sets any additional query modifiers.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.NoCursorTimeout">
      <summary>
            Gets or sets a value indicating whether the server will not timeout the cursor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.OplogReplay">
      <summary>
            Gets or sets a value indicating whether the OplogReplay bit will be set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.ShowRecordId">
      <summary>
            Gets or sets whether the record Id should be added to the result document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Skip">
      <summary>
            Gets or sets the number of documents skip.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Snapshot">
      <summary>
            Gets or sets whether to use snapshot behavior.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOpcodeOperation`1.ToExplainOperation(MongoDB.Driver.Core.Operations.ExplainVerbosity)">
      <summary>
            Returns an explain operation for this find operation.
            </summary>
      <param name="verbosity">The verbosity.</param>
      <returns>An explain operation.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.FindOperation`1">
      <summary>
            Represents a Find operation.
            </summary>
      <typeparam name="TDocument">The type of the returned documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.FindOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.AllowPartialResults">
      <summary>
            Gets or sets a value indicating whether the server is allowed to return partial results if any shards are unavailable.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Comment">
      <summary>
            Gets or sets the comment.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.CursorType">
      <summary>
            Gets or sets the type of the cursor.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.FirstBatchSize">
      <summary>
            Gets or sets the size of the first batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Hint">
      <summary>
            Gets or sets the hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Max">
      <summary>
            Gets or sets the max key value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.MaxAwaitTime">
      <summary>
            Gets or sets the maximum await time for TailableAwait cursors.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.MaxScan">
      <summary>
            Gets or sets the max scan.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Min">
      <summary>
            Gets or sets the min key value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Modifiers">
      <summary>
            Gets or sets any additional query modifiers.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.NoCursorTimeout">
      <summary>
            Gets or sets a value indicating whether the server will not timeout the cursor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.OplogReplay">
      <summary>
            Gets or sets a value indicating whether the OplogReplay bit will be set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Projection">
      <summary>
            Gets or sets the projection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.ReturnKey">
      <summary>
            Gets or sets whether to only return the key values.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.ShowRecordId">
      <summary>
            Gets or sets whether the record Id should be added to the result document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.SingleBatch">
      <summary>
            Gets or sets whether to return only a single batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Skip">
      <summary>
            Gets or sets the number of documents skip.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Snapshot">
      <summary>
            Gets or sets whether to use snapshot behavior.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.FindOperation`1.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.GeoNearOperation`1">
      <summary>
            Represents the geoNear command.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GeoNearOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonValue,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.GeoNearOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="near">The point for which to find the closest documents.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.DistanceMultiplier">
      <summary>
            Gets or sets the distance multiplier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GeoNearOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GeoNearOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.IncludeLocs">
      <summary>
            Gets or sets whether to include the locations of the matching documents.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.MaxDistance">
      <summary>
            Gets or sets the maximum distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.Near">
      <summary>
            Gets the point for which to find the closest documents.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.Spherical">
      <summary>
            Gets or sets whether to use spherical geometry.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoNearOperation`1.UniqueDocs">
      <summary>
            Gets or sets whether to return a document only once.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.GeoSearchOperation`1">
      <summary>
            Represents the geoSearch command.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonValue,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.GeoNearOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="near">The point for which to find the closest documents.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.MaxDistance">
      <summary>
            Gets or sets the maximum distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.Near">
      <summary>
            Gets the point for which to find the closest documents.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GeoSearchOperation`1.Search">
      <summary>
            Gets or sets the search.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.GroupOperation`1">
      <summary>
            Represents a group operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GroupOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonDocument,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.GroupOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="key">The key.</param>
      <param name="initial">The initial aggregation result for each group.</param>
      <param name="reduceFunction">The reduce function.</param>
      <param name="filter">The filter.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GroupOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonDocument,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.GroupOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="keyFunction">The key function.</param>
      <param name="initial">The initial aggregation result for each group.</param>
      <param name="reduceFunction">The reduce function.</param>
      <param name="filter">The filter.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GroupOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.GroupOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.FinalizeFunction">
      <summary>
            Gets or sets the finalize function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.Initial">
      <summary>
            Gets the initial aggregation result for each group.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.Key">
      <summary>
            Gets the key.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.KeyFunction">
      <summary>
            Gets the key function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.ReduceFunction">
      <summary>
            Gets the reduce function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.GroupOperation`1.ResultSerializer">
      <summary>
            Gets or sets the result serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.IndexNameHelper">
      <summary>
            Represents helper methods for index names.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.IndexNameHelper.GetIndexName(MongoDB.Bson.BsonDocument)">
      <summary>
            Gets the name of the index derived from the keys specification.
            </summary>
      <param name="keys">The keys specification.</param>
      <returns>The name of the index.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.IndexNameHelper.GetIndexName(System.String[])">
      <summary>
            Gets the name of the index derived from the key names.
            </summary>
      <param name="keyNames">The key names.</param>
      <returns>The name of the index.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1">
      <summary>
            Represents an insert operation using the insert opcode.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.Misc.BatchableSource{`0},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="documentSource">The document source.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.ContinueOnError">
      <summary>
            Gets a value indicating whether the server should continue on error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.DocumentSource">
      <summary>
            Gets the document source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.MaxBatchCount">
      <summary>
            Gets or sets the maximum number of documents in a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.MaxDocumentSize">
      <summary>
            Gets or sets the maximum size of a document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.MaxMessageSize">
      <summary>
            Gets or sets the maximum size of a message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.Serializer">
      <summary>
            Gets the serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.InsertRequest">
      <summary>
            Represents a request to insert a document.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.InsertRequest.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.InsertRequest" /> class.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.InsertRequest.Document">
      <summary>
            Gets or sets the document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.IReadOperation`1">
      <summary>
            Represents a database read operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.IReadOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.IReadOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.IWriteOperation`1">
      <summary>
            Represents a database write operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.IWriteOperation`1.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.IWriteOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListCollectionsOperation">
      <summary>
            Represents a list collections operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListCollectionsOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsOperation.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation">
      <summary>
            Represents a list collections operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListCollectionsOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsUsingCommandOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation">
      <summary>
            Represents a list collections operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListCollectionsOperation" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation.DatabaseNamespace">
      <summary>
            Gets the database namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListCollectionsUsingQueryOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListDatabasesOperation">
      <summary>
            Represents the listDatabases command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListDatabasesOperation.#ctor(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListDatabasesOperation" /> class.
            </summary>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListDatabasesOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListDatabasesOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListDatabasesOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListIndexesOperation">
      <summary>
            Represents a list indexes operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListIndexesOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListIndexesOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListIndexesOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation">
      <summary>
            Represents a list indexes operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ListIndexesUsingQueryOperation">
      <summary>
            Represents a list indexes operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesUsingQueryOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ListIndexesOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListIndexesUsingQueryOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesUsingQueryOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ListIndexesUsingQueryOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ListIndexesUsingQueryOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation">
      <summary>
            Represents a map-reduce operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="mapFunction">The map function.</param>
      <param name="reduceFunction">The reduce function.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation.CreateCommand(MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Creates the command.
            </summary>
      <param name="serverVersion">The server version.</param>
      <returns>The command.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation.CreateOutputOptions">
      <summary>
            Creates the output options.
            </summary>
      <returns>The output options.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceLegacyOperation.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.MapReduceOperation`1">
      <summary>
            Represents a map-reduce operation.
            </summary>
      <typeparam name="TResult">The type of the result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="mapFunction">The map function.</param>
      <param name="reduceFunction">The reduce function.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.CreateCommand(MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Creates the command.
            </summary>
      <param name="serverVersion">The server version.</param>
      <returns>The command.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.CreateOutputOptions">
      <summary>
            Creates the output options.
            </summary>
      <returns>The output options.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperation`1.ResultSerializer">
      <summary>
            Gets the result serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.MapReduceOperationBase">
      <summary>
            Represents a base class for map-reduce operations.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperationBase.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceOperationBase" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="mapFunction">The map function.</param>
      <param name="reduceFunction">The reduce function.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperationBase.CreateCommand(MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Creates the command.
            </summary>
      <param name="serverVersion">The server version.</param>
      <returns>The command.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOperationBase.CreateOutputOptions">
      <summary>
            Creates the output options.
            </summary>
      <returns>The output options.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Filter">
      <summary>
            Gets or sets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.FinalizeFunction">
      <summary>
            Gets or sets the finalize function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.JavaScriptMode">
      <summary>
            Gets or sets a value indicating whether objects emitted by the map function remain as JavaScript objects.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Limit">
      <summary>
            Gets or sets the maximum number of documents to pass to the map function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.MapFunction">
      <summary>
            Gets the map function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.MaxTime">
      <summary>
            Gets or sets the maximum time the server should spend on this operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.ReduceFunction">
      <summary>
            Gets the reduce function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Scope">
      <summary>
            Gets or sets the scope document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Sort">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOperationBase.Verbose">
      <summary>
            Gets or sets a value indicating whether to include extra information, such as timing, in the result.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.MapReduceOutputMode">
      <summary>
            Represents the map-reduce output mode.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.MapReduceOutputMode.Replace">
      <summary>
            The output of the map-reduce operation replaces the output collection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.MapReduceOutputMode.Merge">
      <summary>
            The output of the map-reduce operation is merged with the output collection.
            If an existing document has the same key as the new result, overwrite the existing document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.MapReduceOutputMode.Reduce">
      <summary>
            The output of the map-reduce operation is merged with the output collection.
            If an existing document has the same key as the new result, apply the reduce function to both
            the new and the existing documents and overwrite the existing document with the result.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation">
      <summary>
            Represents a map-reduce operation that outputs its results to a collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="outputCollectionNamespace">The output collection namespace.</param>
      <param name="mapFunction">The map function.</param>
      <param name="reduceFunction">The reduce function.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.CreateCommand(MongoDB.Driver.Core.Misc.SemanticVersion)">
      <summary>
            Creates the command.
            </summary>
      <param name="serverVersion">The server version.</param>
      <returns>The command.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.CreateOutputOptions">
      <summary>
            Creates the output options.
            </summary>
      <returns>The output options.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.NonAtomicOutput">
      <summary>
            Gets or sets a value indicating whether the server should not lock the database for merge and reduce output modes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.OutputCollectionNamespace">
      <summary>
            Gets the output collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.OutputMode">
      <summary>
            Gets or sets the output mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation.ShardedOutput">
      <summary>
            Gets or sets a value indicating whether the output collection should be sharded.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException">
      <summary>
            Represents a bulk write operation exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core.Operations.BulkWriteOperationResult,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.BulkWriteOperationError},MongoDB.Driver.Core.Operations.BulkWriteConcernError,System.Collections.Generic.IReadOnlyList{MongoDB.Driver.Core.Operations.WriteRequest})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException" /> class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="result">The result.</param>
      <param name="writeErrors">The write errors.</param>
      <param name="writeConcernError">The write concern error.</param>
      <param name="unprocessedRequests">The unprocessed requests.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException" /> class.
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.Result">
      <summary>
            Gets the result of the bulk write operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.UnprocessedRequests">
      <summary>
            Gets the unprocessed requests.
            </summary>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.WriteConcernError">
      <summary>
            Gets the write concern error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException.WriteErrors">
      <summary>
            Gets the write errors.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.OperationExtensionMethods">
      <summary>
            Represents extension methods for operations.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.OperationExtensionMethods.Execute``1(MongoDB.Driver.Core.Operations.IReadOperation{``0},MongoDB.Driver.Core.Bindings.IChannelSourceHandle,MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
      <summary>
            Executes a read operation using a channel source.
            </summary>
      <param name="operation">The read operation.</param>
      <param name="channelSource">The channel source.</param>
      <param name="readPreference">The read preference.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.OperationExtensionMethods.Execute``1(MongoDB.Driver.Core.Operations.IWriteOperation{``0},MongoDB.Driver.Core.Bindings.IChannelSourceHandle,System.Threading.CancellationToken)">
      <summary>
            Executes a write operation using a channel source.
            </summary>
      <param name="operation">The write operation.</param>
      <param name="channelSource">The channel source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.OperationExtensionMethods.ExecuteAsync``1(MongoDB.Driver.Core.Operations.IReadOperation{``0},MongoDB.Driver.Core.Bindings.IChannelSourceHandle,MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
      <summary>
            Executes a read operation using a channel source.
            </summary>
      <param name="operation">The read operation.</param>
      <param name="channelSource">The channel source.</param>
      <param name="readPreference">The read preference.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.OperationExtensionMethods.ExecuteAsync``1(MongoDB.Driver.Core.Operations.IWriteOperation{``0},MongoDB.Driver.Core.Bindings.IChannelSourceHandle,System.Threading.CancellationToken)">
      <summary>
            Executes a write operation using a channel source.
            </summary>
      <param name="operation">The write operation.</param>
      <param name="channelSource">The channel source.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ParallelScanOperation`1">
      <summary>
            Represents a parallel scan operation.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.#ctor(MongoDB.Driver.CollectionNamespace,System.Int32,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ParallelScanOperation`1" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="numberOfCursors">The number of cursors.</param>
      <param name="serializer">The serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.BatchSize">
      <summary>
            Gets or sets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.NumberOfCursors">
      <summary>
            Gets the number of cursors.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ParallelScanOperation`1.Serializer">
      <summary>
            Gets the serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.PingOperation">
      <summary>
            Represents a ping operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.PingOperation.#ctor(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.PingOperation" /> class.
            </summary>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.PingOperation.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.PingOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.PingOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ReadCommandOperation`1">
      <summary>
            Represents a read command operation.
            </summary>
      <typeparam name="TCommandResult">The type of the command result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ReadCommandOperation`1.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ReadCommandOperation`1" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="command">The command.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ReadCommandOperation`1.Execute(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ReadCommandOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IReadBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.RenameCollectionOperation">
      <summary>
            Represents a rename collection operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.RenameCollectionOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.RenameCollectionOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="newCollectionNamespace">The new collection namespace.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.RenameCollectionOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.RenameCollectionOperation.DropTarget">
      <summary>
            Gets or sets a value indicating whether to drop the target collection first if it already exists.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.RenameCollectionOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.RenameCollectionOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.RenameCollectionOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.RenameCollectionOperation.NewCollectionNamespace">
      <summary>
            Gets the new collection namespace.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ReturnDocument">
      <summary>
            The document to return when executing a FindAndModify command.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.ReturnDocument.Before">
      <summary>
            Returns the document before the modification.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.ReturnDocument.After">
      <summary>
            Returns the document after the modification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation">
      <summary>
            Represents an update operation using the update opcode.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.#ctor(MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core.Operations.UpdateRequest,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation" /> class.
            </summary>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="request">The request.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.MaxDocumentSize">
      <summary>
            Gets or sets the maximum size of a document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.MessageEncoderSettings">
      <summary>
            Gets the message encoder settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.Request">
      <summary>
            Gets the request.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateOpcodeOperation.WriteConcern">
      <summary>
            Gets or sets the write concern.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.UpdateRequest">
      <summary>
            Represents a request to update one or more documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.UpdateRequest.#ctor(MongoDB.Driver.Core.Operations.UpdateType,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.UpdateRequest" /> class.
            </summary>
      <param name="updateType">The update type.</param>
      <param name="filter">The filter.</param>
      <param name="update">The update.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateRequest.Filter">
      <summary>
            Gets the filter.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateRequest.IsMulti">
      <summary>
            Gets or sets a value indicating whether this update should affect all matching documents.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateRequest.IsUpsert">
      <summary>
            Gets or sets a value indicating whether a document should be inserted if no matching document is found.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateRequest.Update">
      <summary>
            Gets the update specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.UpdateRequest.UpdateType">
      <summary>
            Gets the update type.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.UpdateType">
      <summary>
            Represents the update type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.UpdateType.Unknown">
      <summary>
            The update type is unknown.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.UpdateType.Update">
      <summary>
            This update uses an update specification to update an existing document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.UpdateType.Replacement">
      <summary>
            This update completely replaces an existing document  with a new one.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.WriteCommandOperation`1">
      <summary>
            Represents a write command operation.
            </summary>
      <typeparam name="TCommandResult">The type of the command result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.WriteCommandOperation`1.#ctor(MongoDB.Driver.DatabaseNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.WriteCommandOperation`1" /> class.
            </summary>
      <param name="databaseNamespace">The database namespace.</param>
      <param name="command">The command.</param>
      <param name="resultSerializer">The result serializer.</param>
      <param name="messageEncoderSettings">The message encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.WriteCommandOperation`1.Execute(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The result of the operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.WriteCommandOperation`1.ExecuteAsync(MongoDB.Driver.Core.Bindings.IWriteBinding,System.Threading.CancellationToken)">
      <summary>
            Executes the operation.
            </summary>
      <param name="binding">The binding.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is the result of the operation.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.WriteRequest">
      <summary>
            Represents a request to write something to the database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.WriteRequest.#ctor(MongoDB.Driver.Core.Operations.WriteRequestType)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.WriteRequest" /> class.
            </summary>
      <param name="requestType">The request type.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.WriteRequest.CorrelationId">
      <summary>
            Gets or sets the correlation identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.WriteRequest.RequestType">
      <summary>
            Gets the request type.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.WriteRequestType">
      <summary>
            Represents the type of a write request.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.WriteRequestType.Delete">
      <summary>
            A delete request.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.WriteRequestType.Insert">
      <summary>
            An insert request.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Operations.WriteRequestType.Update">
      <summary>
            An udpate request.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.CollectionElementNameValidator">
      <summary>
            Represents an element name validator that checks that element names are valid for MongoDB collections.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.CollectionElementNameValidator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Core.Operations.ElementNameValidators.CollectionElementNameValidator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.CollectionElementNameValidator.GetValidatorForChildContent(System.String)">
      <summary>
            Gets the validator to use for child content (a nested document or array).
            </summary>
      <param name="elementName">The name of the element.</param>
      <returns>The validator to use for child content.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ElementNameValidators.CollectionElementNameValidator.Instance">
      <summary>
            Gets a pre-created instance of a CollectionElementNameValidator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.CollectionElementNameValidator.IsValidElementName(System.String)">
      <summary>
            Determines whether the element name is valid.
            </summary>
      <param name="elementName">The name of the element.</param>
      <returns>True if the element name is valid.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.ElementNameValidatorFactory">
      <summary>
            Represents a factory for element name validators based on the update type.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.ElementNameValidatorFactory.ForUpdateType(MongoDB.Driver.Core.Operations.UpdateType)">
      <summary>
            Returns an element name validator for the update type.
            </summary>
      <param name="updateType">Type of the update.</param>
      <returns>An element name validator.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator">
      <summary>
            Represents an element name validator for update operations.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.GetValidatorForChildContent(System.String)">
      <summary>
            Gets the validator to use for child content (a nested document or array).
            </summary>
      <param name="elementName">The name of the element.</param>
      <returns>The validator to use for child content.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.Instance">
      <summary>
            Gets a pre-created instance of an UpdateElementNameValidator.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator.IsValidElementName(System.String)">
      <summary>
            Determines whether the element name is valid.
            </summary>
      <param name="elementName">The name of the element.</param>
      <returns>True if the element name is valid.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator">
      <summary>
            Represents an element name validator that will validate element names for either an update or a replacement based on whether the first element name starts with a "$".
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator.GetValidatorForChildContent(System.String)">
      <summary>
            Gets the validator to use for child content (a nested document or array).
            </summary>
      <param name="elementName">The name of the element.</param>
      <returns>The validator to use for child content.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator.IsValidElementName(System.String)">
      <summary>
            Determines whether the element name is valid.
            </summary>
      <param name="elementName">The name of the element.</param>
      <returns>True if the element name is valid.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.IClusterableServer">
      <summary>
            Represents a server that can be part of a cluster.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.IClusterableServer.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.IClusterableServer.Invalidate">
      <summary>
            Invalidates this instance (sets the server type to Unknown and clears the connection pool).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.IClusterableServer.IsInitialized">
      <summary>
            Gets a value indicating whether this instance is initialized.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.IClusterableServer.RequestHeartbeat">
      <summary>
            Requests a heartbeat as soon as possible.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.IClusterableServerFactory">
      <summary>
            Represents a server factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.IClusterableServerFactory.CreateServer(MongoDB.Driver.Core.Clusters.ClusterId,System.Net.EndPoint)">
      <summary>
            Creates the server.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="endPoint">The end point.</param>
      <returns>A server.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.IServer">
      <summary>
            Represents a MongoDB server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.IServer.Description">
      <summary>
            Gets the server description.
            </summary>
    </member>
    <member name="E:MongoDB.Driver.Core.Servers.IServer.DescriptionChanged">
      <summary>
            Occurs when the server description changes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.IServer.EndPoint">
      <summary>
            Gets the end point.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.IServer.GetChannel(System.Threading.CancellationToken)">
      <summary>
            Gets a channel to the server.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A channel.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.IServer.GetChannelAsync(System.Threading.CancellationToken)">
      <summary>
            Gets a channel to the server.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>A Task whose result is a channel.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.IServer.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.ServerDescription">
      <summary>
            Represents information about a server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.#ctor(MongoDB.Driver.Core.Servers.ServerId,System.Net.EndPoint,MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Net.EndPoint},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ElectionId},MongoDB.Driver.Optional{System.Exception},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ReplicaSetConfig},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerState},MongoDB.Driver.Optional{MongoDB.Driver.TagSet},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerType},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.SemanticVersion},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.Range{System.Int32}})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.ServerDescription" /> class.
            </summary>
      <param name="serverId">The server identifier.</param>
      <param name="endPoint">The end point.</param>
      <param name="averageRoundTripTime">The average round trip time.</param>
      <param name="canonicalEndPoint">The canonical end point.</param>
      <param name="electionId">The election identifier.</param>
      <param name="heartbeatException">The heartbeat exception.</param>
      <param name="maxBatchCount">The maximum batch count.</param>
      <param name="maxDocumentSize">The maximum size of a document.</param>
      <param name="maxMessageSize">The maximum size of a message.</param>
      <param name="maxWireDocumentSize">The maximum size of a wire document.</param>
      <param name="replicaSetConfig">The replica set configuration.</param>
      <param name="state">The server state.</param>
      <param name="tags">The replica set tags.</param>
      <param name="type">The server type.</param>
      <param name="version">The server version.</param>
      <param name="wireVersionRange">The wire version range.</param>
      <exception cref="T:System.ArgumentException">EndPoint and ServerId.EndPoint must match.</exception>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.AverageRoundTripTime">
      <summary>
            Gets the average round trip time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.CanonicalEndPoint">
      <summary>
            Gets the canonical end point. This is the endpoint that the cluster knows this 
            server by. Currently, it only applies to a replica set config and will match
            what is in the replica set configuration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ElectionId">
      <summary>
            Gets the election identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.EndPoint">
      <summary>
            Gets the end point.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.Equals(MongoDB.Driver.Core.Servers.ServerDescription)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.HeartbeatException">
      <summary>
            Gets the most recent heartbeat exception.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxBatchCount">
      <summary>
            Gets the maximum number of documents in a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxDocumentSize">
      <summary>
            Gets the maximum size of a document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxMessageSize">
      <summary>
            Gets the maximum size of a message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.MaxWireDocumentSize">
      <summary>
            Gets the maximum size of a wire document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ReplicaSetConfig">
      <summary>
            Gets the replica set configuration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.ServerId">
      <summary>
            Gets the server identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.State">
      <summary>
            Gets the server state.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.Tags">
      <summary>
            Gets the replica set tags.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.Type">
      <summary>
            Gets the server type.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.Version">
      <summary>
            Gets the server version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescription.WireVersionRange">
      <summary>
            Gets the wire version range.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescription.With(MongoDB.Driver.Optional{System.TimeSpan},MongoDB.Driver.Optional{System.Net.EndPoint},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ElectionId},MongoDB.Driver.Optional{System.Exception},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{System.Int32},MongoDB.Driver.Optional{MongoDB.Driver.Core.Clusters.ReplicaSetConfig},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerState},MongoDB.Driver.Optional{MongoDB.Driver.TagSet},MongoDB.Driver.Optional{MongoDB.Driver.Core.Servers.ServerType},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.SemanticVersion},MongoDB.Driver.Optional{MongoDB.Driver.Core.Misc.Range{System.Int32}})">
      <summary>
            Returns a new instance of ServerDescription with some values changed.
            </summary>
      <param name="averageRoundTripTime">The average round trip time.</param>
      <param name="canonicalEndPoint">The canonical end point.</param>
      <param name="electionId">The election identifier.</param>
      <param name="heartbeatException">The heartbeat exception.</param>
      <param name="maxBatchCount">The maximum batch count.</param>
      <param name="maxDocumentSize">The maximum size of a document.</param>
      <param name="maxMessageSize">The maximum size of a message.</param>
      <param name="maxWireDocumentSize">The maximum size of a wire document.</param>
      <param name="replicaSetConfig">The replica set configuration.</param>
      <param name="state">The server state.</param>
      <param name="tags">The replica set tags.</param>
      <param name="type">The server type.</param>
      <param name="version">The server version.</param>
      <param name="wireVersionRange">The wire version range.</param>
      <returns>
            A new instance of ServerDescription.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs">
      <summary>
            Represents the arguments to the event that occurs when the server description changes.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs.#ctor(MongoDB.Driver.Core.Servers.ServerDescription,MongoDB.Driver.Core.Servers.ServerDescription)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs" /> class.
            </summary>
      <param name="oldServerDescription">The old server description.</param>
      <param name="newServerDescription">The new server description.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs.NewServerDescription">
      <summary>
            Gets the new server description.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs.OldServerDescription">
      <summary>
            Gets the old server description.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.ServerId">
      <summary>
            Represents a server identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerId.#ctor(MongoDB.Driver.Core.Clusters.ClusterId,System.Net.EndPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.Servers.ServerId" /> class.
            </summary>
      <param name="clusterId">The cluster identifier.</param>
      <param name="endPoint">The end point.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerId.ClusterId">
      <summary>
            Gets the cluster identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.Servers.ServerId.EndPoint">
      <summary>
            Gets the end point.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerId.Equals(MongoDB.Driver.Core.Servers.ServerId)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerId.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerId.GetHashCode">
      <summary>Serves as the default hash function. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerId.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.ServerState">
      <summary>
            Represents the server state.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerState.Disconnected">
      <summary>
            The server is disconnected.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerState.Connected">
      <summary>
            The server is connected.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.ServerType">
      <summary>
            Represents the server type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.Unknown">
      <summary>
            The server type is unknown.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.Standalone">
      <summary>
            The server is a standalone server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ShardRouter">
      <summary>
            The server is a shard router.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetPrimary">
      <summary>
            The server is a replica set primary.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetSecondary">
      <summary>
            The server is a replica set secondary.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetPassive">
      <summary>
            Use ReplicaSetSecondary instead.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetArbiter">
      <summary>
            The server is a replica set arbiter.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetOther">
      <summary>
            The server is a replica set member of some other type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.Servers.ServerType.ReplicaSetGhost">
      <summary>
            The server is a replica set ghost member.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.Servers.ServerTypeExtensions">
      <summary>
            Represents extension methods on ServerType.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerTypeExtensions.IsReplicaSetMember(MongoDB.Driver.Core.Servers.ServerType)">
      <summary>
            Determines whether this server type is a replica set member.
            </summary>
      <param name="serverType">The type of the server.</param>
      <returns>Whether this server type is a replica set member.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerTypeExtensions.IsWritable(MongoDB.Driver.Core.Servers.ServerType)">
      <summary>
            Determines whether this server type is a writable server.
            </summary>
      <param name="serverType">The type of the server.</param>
      <returns>Whether this server type is a writable server.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.Servers.ServerTypeExtensions.ToClusterType(MongoDB.Driver.Core.Servers.ServerType)">
      <summary>
            Infers the cluster type from the server type.
            </summary>
      <param name="serverType">The type of the server.</param>
      <returns>The cluster type.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling">
      <summary>
            Instructions for handling the response from a command.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling.Return">
      <summary>
            Return the response from the server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.CommandResponseHandling.Ignore">
      <summary>
            Ignore the response from the server.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.CursorBatch`1">
      <summary>
            Represents one result batch (returned from either a Query or a GetMore message)
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.CursorBatch`1.#ctor(System.Int64,System.Collections.Generic.IReadOnlyList{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.CursorBatch`1" /> struct.
            </summary>
      <param name="cursorId">The cursor identifier.</param>
      <param name="documents">The documents.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.CursorBatch`1.CursorId">
      <summary>
            Gets the cursor identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.CursorBatch`1.Documents">
      <summary>
            Gets the documents.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage">
      <summary>
            Represents a Delete message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage.#ctor(System.Int32,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="isMulti">if set to <c>true</c> [is multi].</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage.IsMulti">
      <summary>
            Gets a value indicating whether to delete all matching documents.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage.Query">
      <summary>
            Gets the query.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage">
      <summary>
            Represents a GetMore message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage.#ctor(System.Int32,MongoDB.Driver.CollectionNamespace,System.Int64,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="cursorId">The cursor identifier.</param>
      <param name="batchSize">The size of a batch.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage.BatchSize">
      <summary>
            Gets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage.CursorId">
      <summary>
            Gets the cursor identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1">
      <summary>
            Represents an Insert message.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.#ctor(System.Int32,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Driver.Core.Misc.BatchableSource{`0},System.Int32,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="serializer">The serializer.</param>
      <param name="documentSource">The document source.</param>
      <param name="maxBatchCount">The maximum batch count.</param>
      <param name="maxMessageSize">Maximum size of the message.</param>
      <param name="continueOnError">if set to <c>true</c> the server should continue on error.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.ContinueOnError">
      <summary>
            Gets a value indicating whether the server should continue on error.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.DocumentSource">
      <summary>
            Gets the document source.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.MaxBatchCount">
      <summary>
            Gets the maximum number of documents in a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.MaxMessageSize">
      <summary>
            Gets the maximum size of a message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage`1.Serializer">
      <summary>
            Gets the serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage">
      <summary>
            Represents a KillCursors message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="cursorIds">The cursor ids.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage.CursorIds">
      <summary>
            Gets the cursor ids.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage">
      <summary>
            Represents a base class for messages.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType">
      <summary>
            Represents the type of message.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Delete">
      <summary>
            OP_DELETE
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.GetMore">
      <summary>
            OP_GETMORE
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Insert">
      <summary>
            OP_INSERT
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.KillCursors">
      <summary>
            OP_KILLCURSORS
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Query">
      <summary>
            OP_QUERY
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Reply">
      <summary>
            OP_REPLY
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType.Update">
      <summary>
            OP_UPDATE
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage">
      <summary>
            Represents a Query message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.#ctor(System.Int32,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Func{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="fields">The fields.</param>
      <param name="queryValidator">The query validator.</param>
      <param name="skip">The number of documents to skip.</param>
      <param name="batchSize">The size of a batch.</param>
      <param name="slaveOk">if set to <c>true</c> it is OK if the server is not the primary.</param>
      <param name="partialOk">if set to <c>true</c> the server is allowed to return partial results if any shards are unavailable.</param>
      <param name="noCursorTimeout">if set to <c>true</c> the server should not timeout the cursor.</param>
      <param name="oplogReplay">if set to <c>true</c> the OplogReplay bit will be set.</param>
      <param name="tailableCursor">if set to <c>true</c> the query should return a tailable cursor.</param>
      <param name="awaitData">if set to <c>true</c> the server should await data (used with tailable cursors).</param>
      <param name="shouldBeSent">A delegate that determines whether this message should be sent.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.AwaitData">
      <summary>
            Gets a value indicating whether the server should await data (used with tailable cursors).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.BatchSize">
      <summary>
            Gets the size of a batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.Fields">
      <summary>
            Gets the fields.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.NoCursorTimeout">
      <summary>
            Gets a value indicating whether the server should not timeout the cursor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.OplogReplay">
      <summary>
            Gets a value indicating whether the OplogReplay bit will be set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.PartialOk">
      <summary>
            Gets a value indicating whether the server is allowed to return partial results if any shards are unavailable.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.Query">
      <summary>
            Gets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.QueryValidator">
      <summary>
            Gets the query validator.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.Skip">
      <summary>
            Gets the number of documents to skip.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.SlaveOk">
      <summary>
            Gets a value indicating whether it is OK if the server is not the primary.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage.TailableCursor">
      <summary>
            Gets a value indicating whether the query should return a tailable cursor.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1">
      <summary>
            Represents a Reply message.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.#ctor(System.Boolean,System.Int64,System.Boolean,System.Collections.Generic.List{`0},System.Int32,System.Boolean,MongoDB.Bson.BsonDocument,System.Int32,System.Int32,MongoDB.Bson.Serialization.IBsonSerializer{`0},System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1" /> class.
            </summary>
      <param name="awaitCapable">if set to <c>true</c> the server is await capable.</param>
      <param name="cursorId">The cursor identifier.</param>
      <param name="cursorNotFound">if set to <c>true</c> the cursor was not found.</param>
      <param name="documents">The documents.</param>
      <param name="numberReturned">The number of documents returned.</param>
      <param name="queryFailure">if set to <c>true</c> the query failed.</param>
      <param name="queryFailureDocument">The query failure document.</param>
      <param name="requestId">The request identifier.</param>
      <param name="responseTo">The identifier of the message this is a response to.</param>
      <param name="serializer">The serializer.</param>
      <param name="startingFrom">The position of the first document in this batch in the overall result.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.AwaitCapable">
      <summary>
            Gets a value indicating whether the server is await capable.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.CursorId">
      <summary>
            Gets the cursor identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.CursorNotFound">
      <summary>
            Gets a value indicating whether the cursor was not found.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.Documents">
      <summary>
            Gets the documents.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.NumberReturned">
      <summary>
            Gets the number of documents returned.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.QueryFailure">
      <summary>
            Gets a value indicating whether the query failed.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.QueryFailureDocument">
      <summary>
            Gets the query failure document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.Serializer">
      <summary>
            Gets the serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1.StartingFrom">
      <summary>
            Gets the position of the first document in this batch in the overall result.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage">
      <summary>
            Represents a base class for request messages.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage.#ctor(System.Int32,System.Func{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="shouldBeSent">A delegate that determines whether this message should be sent.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage.CurrentGlobalRequestId">
      <summary>
            Gets the current global request identifier.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage.GetNextRequestId">
      <summary>
            Gets the next request identifier.
            </summary>
      <returns>The next request identifier.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage.RequestId">
      <summary>
            Gets the request identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage.ShouldBeSent">
      <summary>
            Gets a delegate that determines whether this message should be sent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage.WasSent">
      <summary>
            Gets or sets a value indicating whether this message was sent.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage">
      <summary>
            Represents a base class for response messages.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="responseTo">The identifier of the message this is a response to.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage.RequestId">
      <summary>
            Gets the request identifier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage.ResponseTo">
      <summary>
            Gets the identifier of the message this is a response to.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage">
      <summary>
            Represents an Update message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.#ctor(System.Int32,MongoDB.Driver.CollectionNamespace,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.IElementNameValidator,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage" /> class.
            </summary>
      <param name="requestId">The request identifier.</param>
      <param name="collectionNamespace">The collection namespace.</param>
      <param name="query">The query.</param>
      <param name="update">The update.</param>
      <param name="updateValidator">The update validator.</param>
      <param name="isMulti">if set to <c>true</c> all matching documents should be updated.</param>
      <param name="isUpsert">if set to <c>true</c> a document should be inserted if no matching document is found.</param>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.CollectionNamespace">
      <summary>
            Gets the collection namespace.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.IsMulti">
      <summary>
            Gets a value indicating whether all matching documents should be updated.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.IsUpsert">
      <summary>
            Gets a value indicating whether a document should be inserted if no matching document is found.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.MessageType">
      <summary>
            Gets the type of the message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.Query">
      <summary>
            Gets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.Update">
      <summary>
            Gets the update.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage.UpdateValidator">
      <summary>
            Gets the update validator.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IEncodableMessage">
      <summary>
            Represents an encodable message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IEncodableMessage.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Gets an encoder for the message from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder">
      <summary>
            Represents a message encoder.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory">
      <summary>
            Represents a message encoder factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetDeleteMessageEncoder">
      <summary>
            Gets an encoder for a Delete message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetGetMoreMessageEncoder">
      <summary>
            Gets an encoder for a GetMore message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetInsertMessageEncoder``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Gets an encoder for an Insert message.
            </summary>
      <param name="serializer">The serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetKillCursorsMessageEncoder">
      <summary>
            Gets an encoder for a KillCursors message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetQueryMessageEncoder">
      <summary>
            Gets an encoder for a Query message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetReplyMessageEncoder``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Gets an encoder for a Reply message.
            </summary>
      <param name="serializer">The serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory.GetUpdateMessageEncoder">
      <summary>
            Gets an encoder for an Update message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector">
      <summary>
            Represents a message encoder selector that gets the appropriate encoder from an encoder factory.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Get the appropriate encoder from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings">
      <summary>
            Represents settings for message encoders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings.Add``1(System.String,``0)">
      <summary>
            Adds a setting.
            </summary>
      <param name="name">The name.</param>
      <param name="value">The value.</param>
      <typeparam name="T">The type of the value.</typeparam>
      <returns>The settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings.GetOrDefault``1(System.String,``0)">
      <summary>
            Gets a setting, or a default value if the setting does not exist.
            </summary>
      <param name="name">The name.</param>
      <param name="defaultValue">The default value.</param>
      <typeparam name="T">The type of the value.</typeparam>
      <returns>The value of the setting, or a default value if the setting does not exist.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName">
      <summary>
            Represents the names of different encoder settings.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.FixOldBinarySubTypeOnInput">
      <summary>
            The name of the FixOldBinarySubTypeOnInput setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.FixOldBinarySubTypeOnOutput">
      <summary>
            The name of the FixOldBinarySubTypeOnOutput setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.FixOldDateTimeMaxValueOnInput">
      <summary>
            The name of the FixOldDateTimeMaxValueOnInput setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.GuidRepresentation">
      <summary>
            The name of the GuidRepresentation setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.Indent">
      <summary>
            The name of the Indent setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.IndentChars">
      <summary>
            The name of the IndentChars setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.MaxDocumentSize">
      <summary>
            The name of the MaxDocumentSize setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.MaxSerializationDepth">
      <summary>
            The name of the MaxSerializationDepth setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.NewLineChars">
      <summary>
            The name of the NewLineChars setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.OutputMode">
      <summary>
            The name of the OutputMode setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.ReadEncoding">
      <summary>
            The name of the ReadEncoding setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.ShellVersion">
      <summary>
            The name of the ShellVersion setting.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettingsName.WriteEncoding">
      <summary>
            The name of the WriteEncoding setting.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1">
      <summary>
            Represents a message encoder selector for ReplyMessages.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1" /> class.
            </summary>
      <param name="documentSerializer">The document serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1.GetEncoder(MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory)">
      <summary>
            Get the appropriate encoder from an encoder factory.
            </summary>
      <param name="encoderFactory">The encoder factory.</param>
      <returns>A message encoder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory">
      <summary>
            Represents a factory for binary message encoders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetDeleteMessageEncoder">
      <summary>
            Gets an encoder for a Delete message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetGetMoreMessageEncoder">
      <summary>
            Gets an encoder for a GetMore message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetInsertMessageEncoder``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Gets an encoder for an Insert message.
            </summary>
      <param name="serializer">The serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetKillCursorsMessageEncoder">
      <summary>
            Gets an encoder for a KillCursors message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetQueryMessageEncoder">
      <summary>
            Gets an encoder for a Query message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetReplyMessageEncoder``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Gets an encoder for a Reply message.
            </summary>
      <param name="serializer">The serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory.GetUpdateMessageEncoder">
      <summary>
            Gets an encoder for an Update message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.DeleteMessageBinaryEncoder">
      <summary>
            Represents a binary encoder for a Delete message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.DeleteMessageBinaryEncoder.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.DeleteMessageBinaryEncoder" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.DeleteMessageBinaryEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.DeleteMessageBinaryEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.GetMoreMessageBinaryEncoder">
      <summary>
            Represents a binary encoder for a GetMore message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.GetMoreMessageBinaryEncoder.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.GetMoreMessageBinaryEncoder" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.GetMoreMessageBinaryEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.GetMoreMessageBinaryEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.InsertMessageBinaryEncoder`1">
      <summary>
            Represents a binary encoder for an Insert message.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.InsertMessageBinaryEncoder`1.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.InsertMessageBinaryEncoder`1" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.InsertMessageBinaryEncoder`1.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.InsertMessageBinaryEncoder`1.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage{`0})">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.KillCursorsMessageBinaryEncoder">
      <summary>
            Represents a binary encoder for a KillCursors message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.KillCursorsMessageBinaryEncoder.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.KillCursorsMessageBinaryEncoder" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.KillCursorsMessageBinaryEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.KillCursorsMessageBinaryEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase">
      <summary>
            Represents a base class for binary message encoders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase.CreateBinaryReader">
      <summary>
            Creates a binary reader for this encoder.
            </summary>
      <returns>A binary reader.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase.CreateBinaryWriter">
      <summary>
            Creates a binary writer for this encoder.
            </summary>
      <returns>A binary writer.</returns>
    </member>
    <member name="P:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase.Encoding">
      <summary>
            Gets the encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder">
      <summary>
            Represents a binary encoder for a Query message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1">
      <summary>
            Represents a binary encoder for a Reply message.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage{`0})">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.UpdateMessageBinaryEncoder">
      <summary>
            Represents a binary encoder for an Update message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.UpdateMessageBinaryEncoder.#ctor(System.IO.Stream,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.UpdateMessageBinaryEncoder" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.UpdateMessageBinaryEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.UpdateMessageBinaryEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.DeleteMessageJsonEncoder">
      <summary>
            Represents a JSON encoder for a Delete message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.DeleteMessageJsonEncoder.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.DeleteMessageJsonEncoder" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.DeleteMessageJsonEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.DeleteMessageJsonEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.DeleteMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.GetMoreMessageJsonEncoder">
      <summary>
            Represents a JSON encoder for a GetMore message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.GetMoreMessageJsonEncoder.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.GetMoreMessageJsonEncoder" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.GetMoreMessageJsonEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.GetMoreMessageJsonEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.GetMoreMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.InsertMessageJsonEncoder`1">
      <summary>
            Represents a JSON encoder for an Insert message.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.InsertMessageJsonEncoder`1.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.InsertMessageJsonEncoder`1" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.InsertMessageJsonEncoder`1.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.InsertMessageJsonEncoder`1.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.InsertMessage{`0})">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory">
      <summary>
            Represents a factory for JSON message encoders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.#ctor(System.IO.TextReader,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.#ctor(System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory" /> class.
            </summary>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetDeleteMessageEncoder">
      <summary>
            Gets an encoder for a Delete message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetGetMoreMessageEncoder">
      <summary>
            Gets an encoder for a GetMore message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetInsertMessageEncoder``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Gets an encoder for an Insert message.
            </summary>
      <param name="serializer">The serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetKillCursorsMessageEncoder">
      <summary>
            Gets an encoder for a KillCursors message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetQueryMessageEncoder">
      <summary>
            Gets an encoder for a Query message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetReplyMessageEncoder``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
      <summary>
            Gets an encoder for a Reply message.
            </summary>
      <param name="serializer">The serializer.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>An encoder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory.GetUpdateMessageEncoder">
      <summary>
            Gets an encoder for an Update message.
            </summary>
      <returns>An encoder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.KillCursorsMessageJsonEncoder">
      <summary>
            Represents a JSON encoder for a KillCursors message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.KillCursorsMessageJsonEncoder.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.KillCursorsMessageJsonEncoder" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.KillCursorsMessageJsonEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.KillCursorsMessageJsonEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.KillCursorsMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase">
      <summary>
            Represents a base class for JSON message encoders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase.CreateJsonReader">
      <summary>
            Creates a JsonReader for this encoder.
            </summary>
      <returns>A JsonReader.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase.CreateJsonWriter">
      <summary>
            Creates a JsonWriter for this encoder.
            </summary>
      <returns>A JsonWriter.</returns>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder">
      <summary>
            Represents a JSON encoder for a Query message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1">
      <summary>
            Represents a JSON encoder for a Reply message.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage{`0})">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.UpdateMessageJsonEncoder">
      <summary>
            Represents a JSON encoder for an Update message.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.UpdateMessageJsonEncoder.#ctor(System.IO.TextReader,System.IO.TextWriter,MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.UpdateMessageJsonEncoder" /> class.
            </summary>
      <param name="textReader">The text reader.</param>
      <param name="textWriter">The text writer.</param>
      <param name="encoderSettings">The encoder settings.</param>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.UpdateMessageJsonEncoder.ReadMessage">
      <summary>
            Reads the message.
            </summary>
      <returns>A message.</returns>
    </member>
    <member name="M:MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.UpdateMessageJsonEncoder.WriteMessage(MongoDB.Driver.Core.WireProtocol.Messages.UpdateMessage)">
      <summary>
            Writes the message.
            </summary>
      <param name="message">The message.</param>
    </member>
  </members>
</doc>